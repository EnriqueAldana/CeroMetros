{"code":"module.exportDefault = function(value) { __vue_script__ = value; }; (function(){var draggable;\nmodule.link(\"vuedraggable\", {\n  \"default\": function (v) {\n    draggable = v;\n  }\n}, 0);\nmodule.exportDefault({\n  name: \"SaveProductionLine\",\n  components: {\n    draggable: draggable\n  },\n  data: function () {\n    return {\n      productionline: {\n        _id: null,\n        name: null,\n        description: null,\n        workstations: []\n      },\n      dataView: {\n        title: '',\n        targetButton: ''\n      },\n      searchSelfWorkstation: '',\n      searchWorkstation: '',\n      selfWorkstations: [],\n      allWorkstations: []\n    };\n  },\n  created: function () {\n    if (this.$router.currentRoute.name.includes(\"create\")) {\n      this.dataView.title = \"Crear linea de produccion\";\n      this.dataView.targetButton = \"Crear\"; //this.listAllWorkstations();\n    } else if (this.$router.currentRoute.name.includes(\"edit\")) {\n      var tempWorkstation = this.$store.state.temporal.element;\n      this.productionline = {\n        _id: tempWorkstation._id,\n        name: tempWorkstation.name,\n        description: tempWorkstation.description,\n        workstations: tempWorkstation.workstations\n      };\n      this.initWorkstations(this.productionline._id);\n      this.dataView.title = \"Editar linea de produccion\";\n      this.dataView.targetButton = \"Actualizar\";\n    }\n  },\n  methods: {\n    onChangeDragList: function (event, propData) {\n      if (event.hasOwnProperty('removed')) {\n        this[propData] = this[propData].filter(function (permission) {\n          return permission._id != event.removed.element._id;\n        });\n      } else if (event.hasOwnProperty('added')) {\n        this[propData].splice(event.added.newIndex, 0, event.added.element);\n      }\n    },\n    saveProductionLine: function () {\n      var _this = this;\n\n      console.log(\"Guardando Linea de produccion: \", this.productionline);\n      this.$loader.activate('Guardando linea de produccion ...');\n      this.productionline.workstations = this.selfWorkstations.map(function (workstation) {\n        return workstation._id;\n      });\n      console.info('this.selfWorkstations', this.selfWorkstations);\n      this.productionline.workstations = this.selfWorkstations;\n      Meteor.call('productionline.save', this.productionline, function (error, response) {\n        _this.$loader.deactivate();\n\n        if (error) {\n          _this.$alert.showAlertSimple('error', error.error);\n        } else {\n          _this.$alert.showAlertSimple('success', response.message);\n\n          _this.$router.push({\n            name: 'home.productionlines'\n          });\n        }\n      });\n    },\n    listAllWorkstations: function () {\n      var _this2 = this;\n\n      Meteor.call('productionline.workstations', function (error, response) {\n        if (error) {\n          _this2.$alert.showAlertSimple('error', error.reason, response);\n        } else {\n          _this2.allWorkstations = response.data;\n        }\n      });\n    },\n    initWorkstations: function (idProductionLine) {\n      var _this3 = this;\n\n      Meteor.call('productionline.workstations.included', idProductionLine, function (error, response) {\n        if (error) {\n          _this3.$alert.showAlertSimple('error', error.reason, response);\n        } else {\n          _this3.selfWorkstations = response.data;\n        }\n      });\n      Meteor.call('productionline.workstations.availables.to.include', idProductionLine, function (error, response) {\n        if (error) {\n          _this3.$alert.showAlertSimple('error', error.reason, response);\n        } else {\n          _this3.allWorkstations = response.data;\n        }\n      });\n    }\n  },\n  computed: {\n    filteredSelfWorkstations: function () {\n      var _this4 = this;\n\n      return this.selfWorkstations.filter(function (workstation) {\n        return workstation.name.toLowerCase().includes(_this4.searchSelfWorkstation.toLowerCase());\n      });\n    },\n    filteredWorkstations: function () {\n      var _this5 = this;\n\n      return this.allWorkstations.filter(function (workstation) {\n        return workstation.name.toLowerCase().includes(_this5.searchWorkstation.toLowerCase());\n      });\n    }\n  }\n});\n})();","map":{"version":3,"sources":["imports/ui/views/ProductionLines/SaveProductionLine.vue"],"names":["draggable","module","link","v","exportDefault","name","components","data","productionline","_id","description","workstations","dataView","title","targetButton","searchSelfWorkstation","searchWorkstation","selfWorkstations","allWorkstations","created","$router","currentRoute","includes","tempWorkstation","$store","state","temporal","element","initWorkstations","methods","onChangeDragList","event","propData","hasOwnProperty","filter","permission","removed","splice","added","newIndex","saveProductionLine","console","log","$loader","activate","map","workstation","info","Meteor","call","error","response","deactivate","$alert","showAlertSimple","message","push","listAllWorkstations","reason","idProductionLine","computed","filteredSelfWorkstations","toLowerCase","filteredWorkstations"],"mappings":"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","sourcesContent":["<template>\n  <v-container>\n    <v-row>\n      <v-col>\n        <div class=\"headline\">{{dataView.title}}</div>\n      </v-col>\n      <v-col cols=\"2\">\n        <v-btn block type=\"submit\" form=\"saveProductionLine\" color=\"primary\" v-text=\"dataView.targetButton\">\n        </v-btn>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col>\n        <v-form @submit.prevent=\"saveProductionLine\" id=\"saveProductionLine\" autocomplete=\"off\">\n          <v-row>\n            <v-col md=\"6\">\n              <v-text-field v-model=\"productionline.name\" id=\"inputName\" name=\"name\" label=\"Nombre de la linea de produccion\">\n              </v-text-field>\n            </v-col>\n            <v-col md=\"6\">\n              <v-text-field v-model=\"productionline.description\" id=\"inputDescription\" name=\"description\"\n                            label=\"DescripciÃ³n de la linea de produccion\">\n              </v-text-field>\n            </v-col>\n          </v-row>\n        </v-form>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col>\n        <v-card>\n          <v-card-title>Estaciones de trabajo de esta linea de produccion</v-card-title>\n          <v-card-text>\n            <v-text-field v-model=\"searchSelfWorkstation\" placeholder=\"Buscar. . .\"\n                          id=\"inputSearchSelfWorkstation\" name=\"workstationName\">\n            </v-text-field>\n          </v-card-text>\n          <v-sheet id=\"scrolling-techniques-2\" class=\"overflow-y-auto\" max-height=\"500\">\n            <v-list style=\"height:400px;\">\n              <v-list-item-group>\n                <draggable :list=\"filteredSelfWorkstations\" @change=\"(ev)=>onChangeDragList(ev,'selfWorkstations')\"  group=\"workstations\">\n                  <v-list-item v-for=\"workstation in filteredSelfWorkstations\"\n                               v-text=\"workstation.name\" :key=\"workstation._id\" return-object >\n                  </v-list-item>\n                </draggable>\n              </v-list-item-group>\n            </v-list>\n          </v-sheet>\n        </v-card>\n      </v-col>\n      <v-col>\n        <v-card>\n          <v-card-title>Todas las estaciones de trabajo</v-card-title>\n          <v-card-text>\n            <v-text-field v-model=\"searchWorkstation\" placeholder=\"Buscar. . .\"\n                          id=\"inputSearchWorkstation\" name=\"workstationName2\">\n            </v-text-field>\n          </v-card-text>\n          <v-sheet id=\"scrolling-techniques-3\" class=\"overflow-y-auto\" max-height=\"500\">\n            <v-list style=\"height:400px;\">\n              <v-list-item-group>\n                <draggable :list=\"filteredWorkstations\" @change=\"(ev)=>onChangeDragList(ev,'allWorkstations')\" group=\"workstations\">\n                  <v-list-item v-for=\"workstation in filteredWorkstations\"\n                               v-text=\"workstation.name\" :key=\"workstation._id\">\n                  </v-list-item>\n                </draggable>\n              </v-list-item-group>\n            </v-list>\n          </v-sheet>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport draggable from 'vuedraggable';\nexport default {\n  name: \"SaveProductionLine\",\n  components: {\n    draggable\n  },\n  data() {\n    return {\n      productionline: {\n        _id: null,\n        name: null,\n        description: null,\n        workstations: []\n      },\n      dataView: {\n        title: '',\n        targetButton: ''\n      },\n      searchSelfWorkstation: '',\n      searchWorkstation: '',\n      selfWorkstations: [],\n      allWorkstations: [],\n    }\n  },\n  created() {\n    if (this.$router.currentRoute.name.includes(\"create\")) {\n      this.dataView.title = \"Crear linea de produccion\";\n      this.dataView.targetButton = \"Crear\";\n      //this.listAllWorkstations();\n    } else if (this.$router.currentRoute.name.includes(\"edit\")) {\n      const tempWorkstation=this.$store.state.temporal.element;\n      this.productionline= {\n            _id: tempWorkstation._id,\n            name: tempWorkstation.name,\n            description: tempWorkstation.description,\n            workstations: tempWorkstation.workstations\n      };\n      this.initWorkstations(this.productionline._id);\n      this.dataView.title = \"Editar linea de produccion\";\n      this.dataView.targetButton = \"Actualizar\";\n    }\n  },\n  methods: {\n    onChangeDragList(event , propData) {\n      if(event.hasOwnProperty('removed')){\n        this[propData] = this[propData].filter(permission => permission._id != event.removed.element._id);\n      }else if(event.hasOwnProperty('added')){\n        this[propData].splice(event.added.newIndex,0, event.added.element);\n      }\n    },\n    saveProductionLine() {\n      console.log(\"Guardando Linea de produccion: \", this.productionline);\n      this.$loader.activate('Guardando linea de produccion ...');\n      this.productionline.workstations = this.selfWorkstations.map(workstation => workstation._id);\n      console.info('this.selfWorkstations',this.selfWorkstations);\n      this.productionline.workstations=this.selfWorkstations;\n      Meteor.call('productionline.save',this.productionline,(error,response)=>{\n        this.$loader.deactivate();\n        if(error){\n          this.$alert.showAlertSimple('error',error.error);\n        }else{\n          this.$alert.showAlertSimple('success',response.message);\n          this.$router.push({name: 'home.productionlines'});\n        }\n      });\n    },\n    listAllWorkstations(){\n      Meteor.call('productionline.workstations',(error,response)=>{\n          if (error){\n            this.$alert.showAlertSimple('error',error.reason,response);\n          } else {\n            \n            this.allWorkstations=response.data;\n          }\n      });\n    },\n    initWorkstations(idProductionLine){\n\n      Meteor.call('productionline.workstations.included',idProductionLine,(error,response)=>{\n        if (error){\n          this.$alert.showAlertSimple('error',error.reason,response);\n        } else {\n          \n          this.selfWorkstations = response.data;\n        }\n      });\n      Meteor.call('productionline.workstations.availables.to.include',idProductionLine,(error,response)=>{\n        if (error){\n          this.$alert.showAlertSimple('error',error.reason,response);\n        } else {\n        \n          this.allWorkstations = response.data;\n        }\n      });\n    }\n  },\n  computed:{\n    filteredSelfWorkstations(){\n      return this.selfWorkstations.filter(workstation=>{\n        return workstation.name.toLowerCase().includes(this.searchSelfWorkstation.toLowerCase());\n      })\n    },\n    filteredWorkstations(){\n      return this.allWorkstations.filter(workstation=>{\n        return workstation.name.toLowerCase().includes(this.searchWorkstation.toLowerCase());\n      });\n    },\n  }\n}\n</script>\n\n<style scoped>\n</style>"],"file":"imports/ui/views/ProductionLines/SaveProductionLine.vue"},"styles":[{"css":"\n","map":{"version":3,"sources":[],"names":[],"mappings":"","file":"SaveProductionLine.vue"}}],"template":"\n<v-container>\n  <v-row>\n    <v-col>\n      <div class=\"headline\">{{dataView.title}}</div>\n    </v-col>\n    <v-col cols=\"2\">\n      <v-btn block type=\"submit\" form=\"saveProductionLine\" color=\"primary\" v-text=\"dataView.targetButton\">\n      </v-btn>\n    </v-col>\n  </v-row>\n  <v-row>\n    <v-col>\n      <v-form @submit.prevent=\"saveProductionLine\" id=\"saveProductionLine\" autocomplete=\"off\">\n        <v-row>\n          <v-col md=\"6\">\n            <v-text-field v-model=\"productionline.name\" id=\"inputName\" name=\"name\" label=\"Nombre de la linea de produccion\">\n            </v-text-field>\n          </v-col>\n          <v-col md=\"6\">\n            <v-text-field v-model=\"productionline.description\" id=\"inputDescription\" name=\"description\"\n                          label=\"DescripciÃ³n de la linea de produccion\">\n            </v-text-field>\n          </v-col>\n        </v-row>\n      </v-form>\n    </v-col>\n  </v-row>\n  <v-row>\n    <v-col>\n      <v-card>\n        <v-card-title>Estaciones de trabajo de esta linea de produccion</v-card-title>\n        <v-card-text>\n          <v-text-field v-model=\"searchSelfWorkstation\" placeholder=\"Buscar. . .\"\n                        id=\"inputSearchSelfWorkstation\" name=\"workstationName\">\n          </v-text-field>\n        </v-card-text>\n        <v-sheet id=\"scrolling-techniques-2\" class=\"overflow-y-auto\" max-height=\"500\">\n          <v-list style=\"height:400px;\">\n            <v-list-item-group>\n              <draggable :list=\"filteredSelfWorkstations\" @change=\"(ev)=>onChangeDragList(ev,'selfWorkstations')\"  group=\"workstations\">\n                <v-list-item v-for=\"workstation in filteredSelfWorkstations\"\n                             v-text=\"workstation.name\" :key=\"workstation._id\" return-object >\n                </v-list-item>\n              </draggable>\n            </v-list-item-group>\n          </v-list>\n        </v-sheet>\n      </v-card>\n    </v-col>\n    <v-col>\n      <v-card>\n        <v-card-title>Todas las estaciones de trabajo</v-card-title>\n        <v-card-text>\n          <v-text-field v-model=\"searchWorkstation\" placeholder=\"Buscar. . .\"\n                        id=\"inputSearchWorkstation\" name=\"workstationName2\">\n          </v-text-field>\n        </v-card-text>\n        <v-sheet id=\"scrolling-techniques-3\" class=\"overflow-y-auto\" max-height=\"500\">\n          <v-list style=\"height:400px;\">\n            <v-list-item-group>\n              <draggable :list=\"filteredWorkstations\" @change=\"(ev)=>onChangeDragList(ev,'allWorkstations')\" group=\"workstations\">\n                <v-list-item v-for=\"workstation in filteredWorkstations\"\n                             v-text=\"workstation.name\" :key=\"workstation._id\">\n                </v-list-item>\n              </draggable>\n            </v-list-item-group>\n          </v-list>\n        </v-sheet>\n      </v-card>\n    </v-col>\n  </v-row>\n</v-container>\n","hash":"data-v-4be3900d"}