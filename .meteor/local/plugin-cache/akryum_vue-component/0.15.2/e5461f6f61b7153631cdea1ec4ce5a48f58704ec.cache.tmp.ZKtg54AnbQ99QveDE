{"code":"module.exportDefault = function(value) { __vue_script__ = value; }; (function(){var ProductionLineRepository;\nmodule.link(\"../../../api/ProductionLines/ProductionLine\", {\n  ProductionLineRepository: function (v) {\n    ProductionLineRepository = v;\n  }\n}, 0);\nmodule.exportDefault({\n  name: \"SaveWorkStation\",\n  data: function () {\n    return {\n      workstation: {\n        _id: null,\n        name: null,\n        name_full: null,\n        location: null,\n        productionline: {\n          _id: null,\n          name: null,\n          description: null\n        }\n      },\n      dataView: {\n        title: '',\n        targetButton: ''\n      }\n    };\n  },\n  created: function () {\n    // Este es un metodo gancho, y se ejecuta cuando el HTML es creado\n    if (this.$router.currentRoute.name.includes(\"create\")) {\n      this.dataView.title = \"Crear Estacion de trabajo\";\n      this.dataView.targetButton = \"Crear\";\n    } else if (this.$router.currentRoute.name.includes(\"edit\")) {\n      this.dataView.title = \"Editar Estacion de trabajo\";\n      this.dataView.targetButton = \"Actualizar\";\n      var tempWorkstation = this.$store.state.temporal.element;\n      this.workstation = {\n        _id: tempWorkstation._id,\n        name: tempWorkstation.name,\n        name_full: tempWorkstation.name_full,\n        location: tempWorkstation.location,\n        productionline: tempWorkstation.productionline\n      };\n    }\n  },\n  methods: {\n    saveWorkStation: function () {\n      var _this = this;\n\n      this.$loader.activate('Guardando estacion de trabajo...');\n      Meteor.call('workstation.save', this.workstation, function (error, response) {\n        _this.$loader.deactivate();\n\n        if (error) {\n          _this.$alert.showAlertSimple('error', error.reason);\n        } else {\n          _this.$alert.showAlertSimple('success', response.message);\n\n          _this.$router.push({\n            name: 'home.workstations'\n          });\n        }\n      });\n    }\n  },\n  meteor: {\n    $subscribe: {\n      'productionlines.list': []\n    },\n    productionlines: function () {\n      return ProductionLineRepository.find({}, {\n        fields: {\n          _id: 1,\n          name: 1,\n          description: 1\n        }\n      }).fetch();\n    }\n  }\n});\n})();","map":{"version":3,"sources":["imports/ui/views/WorkStations/SaveWorkStation.vue"],"names":["ProductionLineRepository","module","link","v","exportDefault","name","data","workstation","_id","name_full","location","productionline","description","dataView","title","targetButton","created","$router","currentRoute","includes","tempWorkstation","$store","state","temporal","element","methods","saveWorkStation","$loader","activate","Meteor","call","error","response","deactivate","$alert","showAlertSimple","reason","message","push","meteor","$subscribe","productionlines","find","fields","fetch"],"mappings":";;;;;;qBA0CA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,IAFA,cAEA;AACA,WAAA;AACA,MAAA,WAAA,EAAA;AACA,QAAA,GAAA,EAAA,IADA;AAEA,QAAA,IAAA,EAAA,IAFA;AAGA,QAAA,SAAA,EAAA,IAHA;AAIA,QAAA,QAAA,EAAA,IAJA;AAKA,QAAA,cAAA,EAAA;AACA,UAAA,GAAA,EAAA,IADA;AAEA,UAAA,IAAA,EAAA,IAFA;AAGA,UAAA,WAAA,EAAA;AAHA;AALA,OADA;AAYA,MAAA,QAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,YAAA,EAAA;AAFA;AAZA,KAAA;AAiBA,GApBA;AAqBA,EAAA,OArBA,cAqBA;AAAA;AACA,QAAA,KAAA,OAAA,CAAA,YAAA,CAAA,IAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA;AACA,WAAA,QAAA,CAAA,KAAA,GAAA,2BAAA;AACA,WAAA,QAAA,CAAA,YAAA,GAAA,OAAA;AACA,KAHA,MAGA,IAAA,KAAA,OAAA,CAAA,YAAA,CAAA,IAAA,CAAA,QAAA,CAAA,MAAA,CAAA,EAAA;AACA,WAAA,QAAA,CAAA,KAAA,GAAA,4BAAA;AACA,WAAA,QAAA,CAAA,YAAA,GAAA,YAAA;AACA,UAAA,eAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,OAAA;AACA,WAAA,WAAA,GAAA;AACA,QAAA,GAAA,EAAA,eAAA,CAAA,GADA;AAEA,QAAA,IAAA,EAAA,eAAA,CAAA,IAFA;AAGA,QAAA,SAAA,EAAA,eAAA,CAAA,SAHA;AAIA,QAAA,QAAA,EAAA,eAAA,CAAA,QAJA;AAKA,QAAA,cAAA,EAAA,eAAA,CAAA;AALA,OAAA;AAOA;AACA,GArCA;AAsCA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,cACA;AAAA;;AACA,WAAA,OAAA,CAAA,QAAA,CAAA,kCAAA;AAEA,MAAA,MAAA,CAAA,IAAA,CAAA,kBAAA,EAAA,KAAA,WAAA,EAAA,UAAA,KAAA,EAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,UAAA;;AACA,YAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,eAAA,CAAA,OAAA,EAAA,KAAA,CAAA,MAAA;AACA,SAFA,MAEA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,eAAA,CAAA,SAAA,EAAA,QAAA,CAAA,OAAA;;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA;AACA;AACA,OARA;AAUA;AAdA,GAtCA;AAsDA,EAAA,MAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,8BAAA;AADA,KADA;AAIA,IAAA,eAJA,cAIA;AACA,aAAA,wBAAA,CAAA,IAAA,CAAA,EAAA,EAAA;AAAA,QAAA,MAAA,EAAA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,IAAA,EAAA,CAAA;AAAA,UAAA,WAAA,EAAA;AAAA;AAAA,OAAA,EAAA,KAAA,EAAA;AACA;AANA;AAtDA","sourcesContent":["<template>\n  <v-container>\n    <v-row>\n      <v-col>\n        <div class=\"headline\">{{dataView.title}}</div>\n      </v-col>\n      <v-col cols=\"2\">\n        <v-btn block type=\"submit\" form=\"saveWorkStation\" color=\"primary\" v-text=\"dataView.targetButton\">\n        </v-btn>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col>\n        <v-card>\n          <v-card-text>\n            <v-form @submit.prevent=\"saveWorkStation\" id=\"saveWorkStation\" autocomplete=\"off\">\n              <v-row>\n                <v-col xs=\"12\" sm=\"12\" md=\"8\">\n                  <v-text-field v-model=\"workstation.name\" id=\"inputName\" name=\"name\" label=\"Nombre\">\n                  </v-text-field>\n                  <v-text-field v-model=\"workstation.name_full\" id=\"inputNameFull\" name=\"name_full\" label=\"Nombre completo\">\n                  </v-text-field>\n                  <v-text-field v-model=\"workstation.location\" id=\"inputLocation\" type=\"text\" name=\"location\" label=\"Ubicacion\">\n                  </v-text-field>\n                  <v-select v-model=\"workstation.productionline\" id=\"inputProductionLine\" name=\"name\"\n                            :items=\"productionlines\"\n                            item-text=\"name\" item-value=\"_id\" return-object\n                            label=\"Linea de produccion\">\n                  </v-select>\n\n                </v-col>\n              </v-row>\n            </v-form>\n          </v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport {ProductionLineRepository} from \"../../../api/ProductionLines/ProductionLine\";\nexport default {\n  name: \"SaveWorkStation\",\n  data() {\n    return {\n      workstation: {\n        _id: null,\n        name: null,\n        name_full: null,\n        location:null,\n        productionline: {\n          _id:null,\n          name: null,\n          description:null\n        }\n      },\n      dataView: {\n        title: '',\n        targetButton: ''\n      }\n    }\n  },\n  created(){  // Este es un metodo gancho, y se ejecuta cuando el HTML es creado\n    if(this.$router.currentRoute.name.includes(\"create\")){\n      this.dataView.title=\"Crear Estacion de trabajo\";\n      this.dataView.targetButton=\"Crear\";\n    }else if(this.$router.currentRoute.name.includes(\"edit\")){\n      this.dataView.title=\"Editar Estacion de trabajo\";\n      this.dataView.targetButton=\"Actualizar\";\n      const tempWorkstation=this.$store.state.temporal.element;\n      this.workstation= {\n        _id: tempWorkstation._id,\n        name: tempWorkstation.name,\n        name_full: tempWorkstation.name_full,\n        location: tempWorkstation.location,\n        productionline: tempWorkstation.productionline\n      };\n    }\n  },\n  methods: {\n    saveWorkStation() {\n      this.$loader.activate('Guardando estacion de trabajo...');\n\n      Meteor.call('workstation.save',this.workstation,(error,response) => {\n        this.$loader.deactivate();\n        if(error){\n              this.$alert.showAlertSimple('error',error.reason);\n        }else{\n          this.$alert.showAlertSimple('success',response.message);\n          this.$router.push({name: 'home.workstations'});\n        }\n      });\n\n    }\n  },\n  meteor:{\n    $subscribe: {\n        'productionlines.list': []\n    },\n    productionlines(){\n     return ProductionLineRepository.find({},{fields:{_id:1,name:1,description:1}}).fetch();\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"file":"imports/ui/views/WorkStations/SaveWorkStation.vue"},"styles":[{"css":"\n\n","map":{"version":3,"sources":[],"names":[],"mappings":"","file":"SaveWorkStation.vue"}}],"template":"\n<v-container>\n  <v-row>\n    <v-col>\n      <div class=\"headline\">{{dataView.title}}</div>\n    </v-col>\n    <v-col cols=\"2\">\n      <v-btn block type=\"submit\" form=\"saveWorkStation\" color=\"primary\" v-text=\"dataView.targetButton\">\n      </v-btn>\n    </v-col>\n  </v-row>\n  <v-row>\n    <v-col>\n      <v-card>\n        <v-card-text>\n          <v-form @submit.prevent=\"saveWorkStation\" id=\"saveWorkStation\" autocomplete=\"off\">\n            <v-row>\n              <v-col xs=\"12\" sm=\"12\" md=\"8\">\n                <v-text-field v-model=\"workstation.name\" id=\"inputName\" name=\"name\" label=\"Nombre\">\n                </v-text-field>\n                <v-text-field v-model=\"workstation.name_full\" id=\"inputNameFull\" name=\"name_full\" label=\"Nombre completo\">\n                </v-text-field>\n                <v-text-field v-model=\"workstation.location\" id=\"inputLocation\" type=\"text\" name=\"location\" label=\"Ubicacion\">\n                </v-text-field>\n                <v-select v-model=\"workstation.productionline\" id=\"inputProductionLine\" name=\"name\"\n                          :items=\"productionlines\"\n                          item-text=\"name\" item-value=\"_id\" return-object\n                          label=\"Linea de produccion\">\n                </v-select>\n\n              </v-col>\n            </v-row>\n          </v-form>\n        </v-card-text>\n      </v-card>\n    </v-col>\n  </v-row>\n</v-container>\n","hash":"data-v-352c377e"}