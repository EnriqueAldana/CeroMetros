{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros/imports/api/Workstations/WorkStationServ.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/api/Workstations/WorkStationServ.js","filename":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros/imports/api/Workstations/WorkStationServ.js","cloneInputAst":true,"passPerPreset":false,"envName":"development","cwd":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros","root":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.12.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros/imports/api/Workstations/WorkStationServ.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/Workstations/WorkStationServ.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet WorkstationRepository;\nmodule.link(\"./WorkStation\", {\n  WorkstationRepository(v) {\n    WorkstationRepository = v;\n  }\n\n}, 1);\nlet ProductionLineRepository;\nmodule.link(\"../ProductionLines/ProductionLine\", {\n  ProductionLineRepository(v) {\n    ProductionLineRepository = v;\n  }\n\n}, 2);\nmodule.exportDefault({\n  validateWorkstationName(newWorkstationName, idWorkstation) {\n    const existsWorkstationList = WorkstationRepository.find({\n      name: newWorkstationName\n    }).fetch(); // recorrer la lista y comparar que uno diferente de mi tenga el mismo nombre\n\n    existsWorkstationList.filter(workstation => {\n      if (workstation.name == newWorkstationName && workstation._id !== idWorkstation) {\n        throw new Meteor.Error('403', 'El nombre de la estacion de trabajo  ya esta siendo utilizado');\n      }\n    });\n  },\n\n  validateWorkstationBusy(idWorkstation) {\n    const existsWorkstationNumber = ProductionLineRepository.find({\n      'workstations._id': idWorkstation\n    }).count();\n    return existsWorkstationNumber;\n  },\n\n  validateWorkstationChangeProductionLine(workstation) {\n    // actualizar la Linea de produccion si es diferente de la actual\n    // Validar que la linea nueva es diferente de la vieja.\n    // Si es diferente hay que removerla de la linea de produccion vieja.\n    const oldWorkstation = WorkstationRepository.findOne(workstation._id);\n\n    if (oldWorkstation) {\n      if (oldWorkstation.productionline._id !== workstation.productionline._id) {\n        const oldProductionLine = ProductionLineRepository.findOne(oldWorkstation.productionline._id);\n        const oldProductionLineWorkstationsUpdated = oldProductionLine.workstations.filter(ws => ws._id !== workstation._id);\n        ProductionLineRepository.update(oldProductionLine._id, {\n          $set: {\n            workstations: oldProductionLineWorkstationsUpdated\n          }\n        });\n      }\n    }\n  }\n\n});","map":{"version":3,"sources":["imports/api/Workstations/WorkStationServ.js"],"names":["Meteor","module","link","v","WorkstationRepository","ProductionLineRepository","exportDefault","validateWorkstationName","newWorkstationName","idWorkstation","existsWorkstationList","find","name","fetch","filter","workstation","_id","Error","validateWorkstationBusy","existsWorkstationNumber","count","validateWorkstationChangeProductionLine","oldWorkstation","findOne","productionline","oldProductionLine","oldProductionLineWorkstationsUpdated","workstations","ws","update","$set"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACF,EAAAA,MAAM,CAACG,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,qBAAJ;AAA0BH,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACE,EAAAA,qBAAqB,CAACD,CAAD,EAAG;AAACC,IAAAA,qBAAqB,GAACD,CAAtB;AAAwB;;AAAlD,CAA5B,EAAgF,CAAhF;AAAmF,IAAIE,wBAAJ;AAA6BJ,MAAM,CAACC,IAAP,CAAY,mCAAZ,EAAgD;AAACG,EAAAA,wBAAwB,CAACF,CAAD,EAAG;AAACE,IAAAA,wBAAwB,GAACF,CAAzB;AAA2B;;AAAxD,CAAhD,EAA0G,CAA1G;AAA1MF,MAAM,CAACK,aAAP,CAIe;AAEXC,EAAAA,uBAAuB,CAACC,kBAAD,EAAoBC,aAApB,EAAkC;AACrD,UAAMC,qBAAqB,GAAEN,qBAAqB,CAACO,IAAtB,CAA2B;AAACC,MAAAA,IAAI,EAACJ;AAAN,KAA3B,EAAsDK,KAAtD,EAA7B,CADqD,CAErD;;AACAH,IAAAA,qBAAqB,CAACI,MAAtB,CACIC,WAAW,IAAE;AACT,UAAIA,WAAW,CAACH,IAAZ,IAAkBJ,kBAAlB,IAAwCO,WAAW,CAACC,GAAZ,KAAkBP,aAA9D,EAA4E;AACxE,cAAM,IAAIT,MAAM,CAACiB,KAAX,CAAiB,KAAjB,EAAwB,+DAAxB,CAAN;AACH;AACJ,KALL;AAOH,GAZU;;AAaXC,EAAAA,uBAAuB,CAACT,aAAD,EAAe;AAClC,UAAMU,uBAAuB,GAAEd,wBAAwB,CAACM,IAAzB,CAA8B;AAAC,0BAAmBF;AAApB,KAA9B,EAAkEW,KAAlE,EAA/B;AACA,WAAOD,uBAAP;AACH,GAhBU;;AAiBXE,EAAAA,uCAAuC,CAACN,WAAD,EAAa;AAChD;AACQ;AACA;AACA,UAAMO,cAAc,GAAGlB,qBAAqB,CAACmB,OAAtB,CAA8BR,WAAW,CAACC,GAA1C,CAAvB;;AAEA,QAAGM,cAAH,EAAkB;AACd,UAAGA,cAAc,CAACE,cAAf,CAA8BR,GAA9B,KAAsCD,WAAW,CAACS,cAAZ,CAA2BR,GAApE,EAAwE;AACpE,cAAMS,iBAAiB,GAAGpB,wBAAwB,CAACkB,OAAzB,CAAiCD,cAAc,CAACE,cAAf,CAA8BR,GAA/D,CAA1B;AACA,cAAMU,oCAAoC,GAAGD,iBAAiB,CAACE,YAAlB,CAA+Bb,MAA/B,CACzCc,EAAE,IAAIA,EAAE,CAACZ,GAAH,KAAYD,WAAW,CAACC,GADW,CAA7C;AAGAX,QAAAA,wBAAwB,CAACwB,MAAzB,CAAgCJ,iBAAiB,CAACT,GAAlD,EAAsD;AAClDc,UAAAA,IAAI,EAAE;AACLH,YAAAA,YAAY,EAAED;AADT;AAD4C,SAAtD;AAKH;AAEJ;AAEZ;;AAtCU,CAJf","sourcesContent":["import {Meteor} from \"meteor/meteor\";\nimport {WorkstationRepository} from './WorkStation'\nimport {ProductionLineRepository} from '../ProductionLines/ProductionLine'\n\nexport default {\n\n    validateWorkstationName(newWorkstationName,idWorkstation){\n        const existsWorkstationList= WorkstationRepository.find({name:newWorkstationName}).fetch();\n        // recorrer la lista y comparar que uno diferente de mi tenga el mismo nombre\n        existsWorkstationList.filter(\n            workstation=>{\n                if (workstation.name==newWorkstationName && workstation._id!==idWorkstation){\n                    throw new Meteor.Error('403', 'El nombre de la estacion de trabajo  ya esta siendo utilizado');\n                }\n            }\n        );\n    },\n    validateWorkstationBusy(idWorkstation){\n        const existsWorkstationNumber= ProductionLineRepository.find({'workstations._id':idWorkstation}).count();\n        return existsWorkstationNumber;\n    },\n    validateWorkstationChangeProductionLine(workstation){\n        // actualizar la Linea de produccion si es diferente de la actual\n                // Validar que la linea nueva es diferente de la vieja.\n                // Si es diferente hay que removerla de la linea de produccion vieja.\n                const oldWorkstation = WorkstationRepository.findOne(workstation._id);\n                \n                if(oldWorkstation){\n                    if(oldWorkstation.productionline._id !== workstation.productionline._id){\n                        const oldProductionLine = ProductionLineRepository.findOne(oldWorkstation.productionline._id);\n                        const oldProductionLineWorkstationsUpdated = oldProductionLine.workstations.filter(\n                            ws => ws._id  !== workstation._id\n                        );\n                        ProductionLineRepository.update(oldProductionLine._id,{\n                            $set: {\n                             workstations: oldProductionLineWorkstationsUpdated\n                            }\n                        });\n                    }\n\n                }\n\n    }\n}"]},"sourceType":"module","hash":"1baf44d37befc184c478e931f35265bb5fa578ea"}
