Identar codigo,
OPTION + COMMAND + L

Arrancar la aplicacion
1.- Fijar la variable de entorno en el shell
export MONGO_URL=mongodb://localhost:27017/zmeters
export MONGO_URL mongodb+srv://cerometrosuser:cerometrosuser2021@cluster0.vmvzt.mongodb.net/zmeters?retryWrites=true&w=majority
mongodb+srv://cerometrosuser:cerom3tros@cluster0.vmvzt.mongodb.net/zmeters?authSource=admin&replicaSet=atlas-o745ey-shard-0&readPreference=primary&appname=MongoDB%20Compass&ssl=trueexport MAIL_URL=smtp://contacto@dimemex.site:Contacto2020@pam.asoshared.com:26
export SENDER_EMAIL=jealdana@gmail.com
export PRODUCT_IMAGE__PATH="URL_PATH en http"
export LOGO_PATH="URL_PAT en http"

2.- Ejecutar en el shell de manera de cargar el archivo de configuracion :
meteor --settings ./settings/settings-development.json
O bien
yarn run:mac

OPCIONES DEL menu
El menu se gestiona en funcion del perfil asignado al usuario de manera automatica
en el archivo SystemOptionsCtl se encuentra el servicio
Despues del desarrollo para que aparezca en el menu hacer:
1.- Ajustar la entrada del menu en SystemOptions.js 
2.-Detener y arrancar la app con las banderas atrue en settings
 "REFRESH_PERMISSIONS": true, 
    "REFRESH_STATIC_PROFILES": true


Manejo de coleccionest
La coleccion de Usuarios se crea mediante los paquetes de Account, por eso lo manejamois con Meteor.users, etc.
La coleccion de Roles se crea mediante loa paquetes alanning:roles
De ahi en mas las colecciones las haremos atraves de MongoDB.

API de Roles se crehttps://meteor-community-packages.github.io/meteor-roles/classes/Roles.html

Objeto Profiles
{
    "_id" : "PGtbeczPuyYK3YxQs",
    "name" : "admin",
    "description" : "Administrador",
    "permissions" : [
        "users-view",
        "users-create",
        "users-edit",
        "users-delete",
        "users-admin",
        "users-super-admin"
    ]
}

TECLAS
Recarga la pagina limpiando el cache.
Shieft + Command + R

Importar archivos
Ctl + barra espacio

TODO
OK 1.- Al refrescar permisos mediante la bandera , hay una excepcion que indoca que el permiso ya existe. La solucion es borrar todos los registros de la BD.
OK 2.- Al crear usuario el coreeo de inicio no corresponde con la plantilla
OK 3.- El nombre del archivo de la foto del usuario no se genera su numero random




Acciones para regenerar el ambiente de desarrollo
1.- Detener el servidor de Meteor.
2.- Ejecutr el comando Meteor reset
3.- eliminar carpeta node_modules
4.- eliminar carpeta .cache
5.- volver a ejecutar comando yarn install si se usa yarn o npm install si se usa npm
6.- Arrancar Meteor .

Documentacion Meteor y Vue
https://www.meteor.com/tutorials/vue/creating-an-app


Procesar estilos
https://vue-loader.vuejs.org/guide/pre-processors.html#sass


Expresiones regulares comunes

https://www.bonaval.com/images/uploads/2011/06/TutorialExpresionesRegularesJavaScript.pdf

Graficas en vue

https://apexcharts.com/

EJEMPLOS de Dragable
https://sortablejs.github.io/Vue.Draggable/#/functional


Documentacion de Meteor validaciones
https://docs.meteor.com/api/check.html


Manejo de Fechas ISO

The toISOString() method returns a string in simplified extended ISO format (ISO 8601), 
which is always 24 or 27 characters long (YYYY-MM-DDTHH:mm:ss.sssZ or Â±YYYYYY-MM-DDTHH:mm:ss.sssZ,
 respectively). The timezone is always zero UTC offset, as denoted by the suffix "Z".

Libreria utilizada
luxon
https://moment.github.io/luxon/#/install
npm install --save luxonnpm

Manejo de Zonas

Changing zones
setZone
Luxon objects are immutable, so when we say "changing zones" we really mean 
"creating a new instance with a different zone". 
Changing zone generally means "change the zone in which this DateTime is expressed 
(and according to which rules it is manipulated), 
but don't change the underlying timestamp." For example:

var local = DateTime.local();
var rezoned = local.setZone("America/Los_Angeles");

// different local times with different offsets
local.toString(); //=> '2017-09-13T18:30:51.141-04:00'
rezoned.toString(); //=> '2017-09-13T15:30:51.141-07:00'

// but actually the same time
local.valueOf() === rezoned.valueOf(); //=> true
