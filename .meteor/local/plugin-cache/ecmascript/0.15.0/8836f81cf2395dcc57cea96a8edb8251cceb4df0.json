{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros/imports/api/Users/UsersCtrl.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/api/Users/UsersCtrl.js","filename":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros/imports/api/Users/UsersCtrl.js","cloneInputAst":true,"passPerPreset":false,"envName":"development","cwd":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros","root":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.12.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros/imports/api/Users/UsersCtrl.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/Users/UsersCtrl.js"}},"code":"let ValidatedMethod;\nmodule.link(\"meteor/mdg:validated-method\", {\n  ValidatedMethod(v) {\n    ValidatedMethod = v;\n  }\n\n}, 0);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet ResponseMessage;\nmodule.link(\"../../startup/server/utilities/ResponseMesssage\", {\n  ResponseMessage(v) {\n    ResponseMessage = v;\n  }\n\n}, 2);\nlet UsersServ;\nmodule.link(\"./UsersServ\", {\n  default(v) {\n    UsersServ = v;\n  }\n\n}, 3);\nlet AuthGuard;\nmodule.link(\"../../middlewares/AuthGuard\", {\n  default(v) {\n    AuthGuard = v;\n  }\n\n}, 4);\nlet Permissions;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  }\n\n}, 5);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 6);\nmodule.link(\"./UserPresenceConfig\");\n// se inserta usuario mediante un listener para agregar el Schema\nAccounts.onCreateUser((options, user) => {\n  const customizedUser = Object.assign({\n    status: {\n      online: false\n    }\n  }, user);\n\n  if (options.profile) {\n    customizedUser.profile = options.profile;\n  }\n\n  return customizedUser;\n}); // Aqui removemos los rgistros de tokens del objeto user en la BD\n\nAccounts.validateLoginAttempt(loginAttempt => {\n  //console.log('loginAttempt ' , loginAttempt);\n  // console.log('allowed' , loginAttempt.allowed);\n  // console.log('correo verificado' , loginAttempt.user.emails[0].verified);\n  if (loginAttempt.allowed) {\n    var _loginAttempt$user$se;\n\n    if (!loginAttempt.user.emails[0].verified) {\n      throw new Meteor.Error('403', 'El correo del usuario no ha sido verificado aÃºn');\n    }\n\n    const loginTokensOfuser = ((_loginAttempt$user$se = loginAttempt.user.services.resume) === null || _loginAttempt$user$se === void 0 ? void 0 : _loginAttempt$user$se.loginTokens) || []; //console.log('loginTokensOfuser ', loginTokensOfuser)\n\n    if (loginTokensOfuser.length > 1) {\n      Meteor.users.update(loginAttempt.user._id, {\n        $set: {\n          'services.resume.loginTokens': [loginTokensOfuser.pop()]\n        }\n      });\n    }\n\n    return true;\n  }\n});\nnew ValidatedMethod({\n  name: 'user.save',\n  mixins: [MethodHooks],\n  permissions: [Permissions.USERS.CREATE.VALUE, Permissions.USERS.UPDATE.VALUE],\n  beforeHooks: [AuthGuard.checkPermission],\n  // Aqui se verifica si los permisos de usuario son adecuados para esta accion\n  afterHooks: [],\n\n  validate(_ref) {\n    let {\n      user\n    } = _ref;\n\n    try {\n      // Valida que la estructura del objeto user este conforme a la definicion.\n      console.log(\"Usuario \", user);\n      check(user, {\n        _id: Match.OneOf(String, null),\n        username: String,\n        emails: [{\n          address: String,\n          verified: Boolean\n        }],\n        profile: {\n          profile: String,\n          name: String,\n          path: Match.OneOf(String, null)\n        } //,\n        //password:String\n\n      });\n    } catch (exception) {\n      console.error('user.save', exception);\n      throw new Meteor.Error('403', 'La informacion introducida no es vÃ¡lida.');\n    } // Validar que no haya usuarios con el mismo correo y nombre de usuario en la BD.\n\n\n    UsersServ.validateEmail(user.emails[0].address, user._id);\n    UsersServ.validateUserName(user.username, user._id);\n  },\n\n  run(_ref2) {\n    return Promise.asyncApply(() => {\n      let {\n        user,\n        photoFileUser\n      } = _ref2;\n      //   async run(user) {\n      console.log('user.save');\n      console.log('Usuario logeado ', this.userId);\n      const responseMessage = new ResponseMessage();\n\n      if (user._id !== null) {\n        console.log('Actualizando usuario a la BD');\n\n        try {\n          Promise.await(UsersServ.updateuser(user, photoFileUser));\n        } catch (exception) {\n          console.error('user.save', exception);\n          throw new Meteor.Error('500', 'OcurriÃ³ un error al actualizar los datos del usuario');\n        }\n\n        console.log('Se actualizaron los datos del usuario exitosamente');\n        responseMessage.create('Se actualizaron los datos del usuario exitosamente');\n      } else {\n        console.log('Agregando usuario a la BD');\n\n        try {\n          Promise.await(UsersServ.createUser(user, photoFileUser)); //await UsersServ.createUser(user,null);\n\n          console.log('Se ha guardado el usuario');\n          responseMessage.create('Se ha guardado el usuario');\n        } catch (exception) {\n          console.error('user.save', exception);\n          throw new Meteor.Error('500', 'OcurriÃ³ un error al guardar el usuario');\n        }\n      }\n\n      return responseMessage;\n    });\n  }\n\n});\nnew ValidatedMethod({\n  name: 'user.delete',\n  mixins: [MethodHooks],\n  permissions: [Permissions.USERS.DELETE.VALUE],\n  beforeHooks: [AuthGuard.checkPermission],\n\n  validate(_ref3) {\n    let {\n      idUser\n    } = _ref3;\n\n    try {\n      check('idUser', String);\n    } catch (exception) {\n      console.error('user.remove', exception);\n      throw new Meteor.Error('403', 'La informacion proporcionada no es correcta');\n    }\n  },\n\n  run(_ref4) {\n    return Promise.asyncApply(() => {\n      let {\n        idUser\n      } = _ref4;\n      const responseMessage = new ResponseMessage();\n\n      try {\n        console.log('Eliminando usuario a la BD');\n        Promise.await(UsersServ.deleteUser(idUser));\n      } catch (exception) {\n        console.error('user.remove', 'OcurriÃ³ un error al eliminar al usaurio');\n        throw new Meteor.Error('500', 'ocurriÃ³ un error al eliminar al usaurio');\n      }\n\n      responseMessage.create('Usuario eliminado exitosamente');\n      return responseMessage;\n    });\n  }\n\n});\nnew ValidatedMethod({\n  name: 'user.updatePersonalData',\n  mixins: [MethodHooks],\n  beforeHooks: [AuthGuard.isUserLogged],\n  // Aqui se verifica si los permisos de usuario son adecuados para esta accion\n  afterHooks: [],\n\n  validate(_ref5) {\n    let {\n      user\n    } = _ref5;\n\n    try {\n      // Valida que la estructura del objeto user este conforme a la definicion.\n      check(user, {\n        _id: Match.OneOf(String, null),\n        username: String,\n        emails: [{\n          address: String,\n          verified: Boolean\n        }],\n        profile: {\n          profile: String,\n          name: String,\n          path: Match.OneOf(String, null)\n        }\n      });\n    } catch (exception) {\n      console.error('user.updatePersonalData', exception);\n      throw new Meteor.Error('403', 'La informacion introducida no es vÃ¡lida.');\n    } // Validar que no haya usuarios con el mismo correo y nombre de usuario en la BD.\n\n\n    UsersServ.validateEmail(user.emails[0].address, user._id);\n    UsersServ.validateUserName(user.username, user._id);\n  },\n\n  run(_ref6) {\n    return Promise.asyncApply(() => {\n      let {\n        user,\n        photoFileUser\n      } = _ref6;\n      console.log('user.updatePersonalData'); //console.log('Usuario logeado ', this.userId);\n\n      const responseMessage = new ResponseMessage();\n\n      if (user._id !== null) {\n        try {\n          Promise.await(UsersServ.updateuser(user, photoFileUser));\n        } catch (exception) {\n          console.error('user.updatePersonalData', exception);\n          throw new Meteor.Error('500', 'OcurriÃ³ un error al actualizar los datos del usuario');\n        }\n\n        console.log('Se actualizaron los datos del usuario exitosamente');\n        responseMessage.create('Se actualizaron los datos del usuario exitosamente');\n      }\n\n      return responseMessage;\n    });\n  }\n\n});","map":{"version":3,"sources":["imports/api/Users/UsersCtrl.js"],"names":["ValidatedMethod","module","link","v","check","ResponseMessage","UsersServ","default","AuthGuard","Permissions","Meteor","Accounts","onCreateUser","options","user","customizedUser","Object","assign","status","online","profile","validateLoginAttempt","loginAttempt","allowed","emails","verified","Error","loginTokensOfuser","services","resume","loginTokens","length","users","update","_id","$set","pop","name","mixins","MethodHooks","permissions","USERS","CREATE","VALUE","UPDATE","beforeHooks","checkPermission","afterHooks","validate","console","log","Match","OneOf","String","username","address","Boolean","path","exception","error","validateEmail","validateUserName","run","photoFileUser","userId","responseMessage","updateuser","create","createUser","DELETE","idUser","deleteUser","isUserLogged"],"mappings":"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","sourcesContent":["import {ValidatedMethod} from 'meteor/mdg:validated-method';\nimport {check} from 'meteor/check';\nimport {ResponseMessage} from \"../../startup/server/utilities/ResponseMesssage\";\nimport UsersServ from \"./UsersServ\";\nimport AuthGuard from \"../../middlewares/AuthGuard\";\nimport Permissions from \"../../startup/server/Permissions\";\nimport {Meteor} from 'meteor/meteor'\nimport './UserPresenceConfig'\n\n// se inserta usuario mediante un listener para agregar el Schema\nAccounts.onCreateUser( (options,user) => {\n    const customizedUser = Object.assign({\n        status: {\n            online: false\n        }\n    }, user);\n    if(options.profile){\n        customizedUser.profile = options.profile;\n    }\n    return customizedUser;\n    \n});\n\n// Aqui removemos los rgistros de tokens del objeto user en la BD\nAccounts.validateLoginAttempt( loginAttempt=>{\n   //console.log('loginAttempt ' , loginAttempt);\n   // console.log('allowed' , loginAttempt.allowed);\n   // console.log('correo verificado' , loginAttempt.user.emails[0].verified);\n    if(loginAttempt.allowed){\n        if(!loginAttempt.user.emails[0].verified){\n            throw new Meteor.Error('403', 'El correo del usuario no ha sido verificado aÃºn');\n        }\n        const loginTokensOfuser=loginAttempt.user.services.resume?.loginTokens || [];\n        //console.log('loginTokensOfuser ', loginTokensOfuser)\n        if(loginTokensOfuser.length > 1){\n            Meteor.users.update(loginAttempt.user._id,{\n                $set:{\n                    'services.resume.loginTokens': [loginTokensOfuser.pop()]\n                }\n            });\n        }\n        return true;\n    }\n\n});\n\n\nnew ValidatedMethod({\n    name: 'user.save',\n    mixins: [MethodHooks],\n    permissions: [Permissions.USERS.CREATE.VALUE,Permissions.USERS.UPDATE.VALUE],\n    beforeHooks: [AuthGuard.checkPermission],  // Aqui se verifica si los permisos de usuario son adecuados para esta accion\n    afterHooks: [],\n    validate({user}) {\n        try {\n            // Valida que la estructura del objeto user este conforme a la definicion.\n            console.log(\"Usuario \",user);\n            check(user, {\n                _id: Match.OneOf(String, null),\n                username: String,\n                emails: [{address: String, verified: Boolean}],\n                profile: {\n                    profile: String,\n                    name: String,\n                    path: Match.OneOf(String, null)\n                }\n                //,\n                //password:String\n            });\n        } catch (exception) {\n            console.error('user.save', exception);\n            throw new Meteor.Error('403', 'La informacion introducida no es vÃ¡lida.');\n        }\n        // Validar que no haya usuarios con el mismo correo y nombre de usuario en la BD.\n        UsersServ.validateEmail(user.emails[0].address,user._id);\n        UsersServ.validateUserName(user.username,user._id);\n\n    },\n    async run({user,photoFileUser}) {\n     //   async run(user) {\n        console.log('user.save');\n        console.log('Usuario logeado ', this.userId);\n        const responseMessage= new ResponseMessage();\n        if(user._id !==null){\n            console.log('Actualizando usuario a la BD');\n            try {\n                await UsersServ.updateuser(user,photoFileUser);\n            }catch(exception){\n                console.error('user.save',exception);\n                throw new Meteor.Error('500','OcurriÃ³ un error al actualizar los datos del usuario');\n            }\n            console.log('Se actualizaron los datos del usuario exitosamente');\n            responseMessage.create('Se actualizaron los datos del usuario exitosamente');\n        }else{\n            console.log('Agregando usuario a la BD');\n            try{\n                await UsersServ.createUser(user,photoFileUser);\n               //await UsersServ.createUser(user,null);\n                console.log('Se ha guardado el usuario');\n                responseMessage.create('Se ha guardado el usuario');\n            }catch (exception) {\n                console.error('user.save', exception);\n                throw new Meteor.Error('500', 'OcurriÃ³ un error al guardar el usuario');\n            }\n        }\n\n\n        return responseMessage;\n    }\n});\n\n\nnew ValidatedMethod({\n    name:'user.delete',\n    mixins: [MethodHooks],\n    permissions: [Permissions.USERS.DELETE.VALUE],\n    beforeHooks: [AuthGuard.checkPermission],\n    validate({idUser}){\n        try{\n            check('idUser',String);\n        }catch (exception) {\n            console.error('user.remove', exception);\n            throw new Meteor.Error('403','La informacion proporcionada no es correcta');\n        }\n\n    },\n    async run({idUser}){\n        const responseMessage = new ResponseMessage;\n\n        try{\n                console.log('Eliminando usuario a la BD');\n               await UsersServ.deleteUser(idUser);\n\n        }catch(exception){\n            console.error('user.remove','OcurriÃ³ un error al eliminar al usaurio');\n            throw new Meteor.Error('500', 'ocurriÃ³ un error al eliminar al usaurio');\n        }\n\n        responseMessage.create('Usuario eliminado exitosamente');\n        return responseMessage;\n    }\n});\n\nnew ValidatedMethod({\n    name: 'user.updatePersonalData',\n    mixins: [MethodHooks],\n    beforeHooks: [AuthGuard.isUserLogged],  // Aqui se verifica si los permisos de usuario son adecuados para esta accion\n    afterHooks: [],\n    validate({user}) {\n        try {\n            // Valida que la estructura del objeto user este conforme a la definicion.\n            check(user, {\n                _id: Match.OneOf(String, null),\n                username: String,\n                emails: [{address: String, verified: Boolean}],\n                profile: {\n                    profile: String,\n                    name: String,\n                    path: Match.OneOf(String, null)\n                }\n            });\n        } catch (exception) {\n            console.error('user.updatePersonalData', exception);\n            throw new Meteor.Error('403', 'La informacion introducida no es vÃ¡lida.');\n        }\n        // Validar que no haya usuarios con el mismo correo y nombre de usuario en la BD.\n        UsersServ.validateEmail(user.emails[0].address,user._id);\n        UsersServ.validateUserName(user.username,user._id);\n\n    },\n    async run({user,photoFileUser}) {\n        console.log('user.updatePersonalData');\n        //console.log('Usuario logeado ', this.userId);\n        const responseMessage= new ResponseMessage();\n        if(user._id !==null){\n            try {\n                await UsersServ.updateuser(user,photoFileUser);\n            }catch(exception){\n                console.error('user.updatePersonalData',exception);\n                throw new Meteor.Error('500','OcurriÃ³ un error al actualizar los datos del usuario');\n            }\n            console.log('Se actualizaron los datos del usuario exitosamente');\n            responseMessage.create('Se actualizaron los datos del usuario exitosamente');\n        }\n\n        return responseMessage;\n    }\n});"]},"sourceType":"module","hash":"8836f81cf2395dcc57cea96a8edb8251cceb4df0"}
