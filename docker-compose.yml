version: '3'

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: dockerfile
    depends_on:
      - mongo
    image: cerometros-web
    restart: on-failure
    env_file: docker.env
    ports:
      - 80:80
    networks:
      - cerometros-net
  
  ssl-proxy:
    container_name: ssl-proxy
    image: justsml/ssl-proxy:latest
    environment:
    - HTTP_PORT=443
    - SERVER_NAME=cerometros.jealdana.com
    - UPSTREAM_TARGET=app:80
    - CERT_PUBLIC_PATH=/certs/fullchain.pem
    - CERT_PRIVATE_PATH=/certs/privkey.pem
    volumes:
    - /certs:/certs:ro
    depends_on:
      - app
    ports:
      - 443:443
    networks:
      - cerometros-net
  
  mongo:
    container_name: mongo
    command:
      - --storageEngine=wiredTiger
    image: mongo:4.2.5-bionic
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: CeroM3tros
    volumes:
      - $PWD/data:/data/db
      - $PWD/database/zmeters8Feb2022/dump/zmeters:/opt/database
    networks:
      - cerometros-net

  mongo-express:
    container_name: mongo-express
    image: mongo-express:latest
    depends_on:
      - mongo
    networks:
      - cerometros-net
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: "mongodb://root:CeroM3tros@mongo:27017/admin"
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: CeroM3tros
 
 
  crontab:
    container_name: crontab
    build: 
      context: .
      dockerfile: cron-dockerfile
    image: crontab
    privileged: true
    restart: always
    depends_on: 
      - mongo
    volumes: 
      - ./backups:/opt/backups
    networks:
      - cerometros-net 
  #zookeeper:
  #  container_name: zookeeper
  #  image: 'bitnami/zookeeper:latest'
  #  networks:
  #    - cerometros-net
  #kafka:
  #  container_name: kafka
  #  image: 'bitnami/kafka:latest'
  #  depends_on:
  #    - zookeeper
  #  networks:
  #    - cerometros-net
  #kafka-ui:
  #  container_name: kafka-ui
  #  image: 'provectuslabs/kafka-ui:latest'
  #  networks:
  #    - cerometros-net
  #  depends_on:
  #    - kafka
  #  ports:
  #    - 8080:8080 
  #  environment:
  #  - KAFKA_CLUSTERS_0_NAME='local'
  #  - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS='kafka:9092'
networks:
      cerometros-net:
        driver: bridge
