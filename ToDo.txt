30 Marzo 2021
1.- Actualizar funcion de validacion de nombre unicos en CRUDS diferentes de Workstation
conosiderar poner indices a workstation y lineas de produccion

31 Marzo 2021
2.- Arrastrar Estaciones en Linea Produccion  OK
3.- Guardar estaciones en linea de produccion  OK
4.- Validar que no se pueda borrar una estacion si esta INCLUIDA a una linea de produccion. OK
5.- Pendiente mostrar las estaciones de trabajo de cada linea en su lista de lineas de produccion. OK

6 Julio 2021
6.- Agregar menu de Unidades de medida y probar CRUD. No se puede borrar una UM si un producto la esta usando. OK

7 Julio 2021
PENDIENTE calcular el Stock de productos al editar un producto o dehabilitar campo de Stock
7.- Implementar catalogo de insumos. FALTA No borrar si esta siendo usado en algun producto.

12 Agosto 2021
8.- Implementar pantalla para asociar insumos al producto y establecer punto de ensamble mediante estaciones de trabajo.
Utilizar
v-data-table with CRUD actions using a v-dialog component for editing each row
https://vuetifyjs.com/en/components/data-tables/#item

Por hacer, que el click sobre la seleccion de la estacion de trabajo, seleccione el renglon y traiga los componentes
27 Agosot 2021
Pendiente Probar funcionamiento de crear y editar
7 Sept 2021
Solo falta edicion de componentes OK
8 Sept 2021
Solo falta validar que en la edicion de componentes el seleccionado no traiga valor cero.OK
9.- Implementar CRUD de ordenes de produccion
10 Sept 2021
falta dar vida a la seleccion de la tabla de ordenes de productos. Falta agregar Status en la Bd 
y Listar Ordenes de trabajo. OK
falta validaciones OK
falta Guardar ............Falta poner un Folio a la O.Prod.
falta editar..........Falta que se seleccionen los productos asignados.OK 23 Sept 2021
            ..........Falta que se muestre el valor del renglon seleccionado..OK
falta Folio que identifique a la Orden de Produccion. OK
falta Borrar...OK.validar que no se pueda borrar si esta en proceso, despacho parcial o completa.OK

10.- Implementar pantalla de operacion de la estacion de trabajo. 
7 Oct 2021
Entorno grafico
9 Oct 2021
Lista de Ordenes de produccion.
Notacion documento que implicA QUE TODO EL DOCUMENTO COINCIDA
db.getCollection('production-orders').find({{products:{  
                                "production_line":{
                                        "_id" : "W9RiSLSsyvNx4TBLz",
                                        "workstations":{
                                                "_id" : "6wDEREhT4Xrb4QZTa",
                                                "configurations":{
                                                        "_id":"jAgBXST4fqAianZzt"
                                                }       
                                        }        
                                }
                        }
                }},{})

Notacion punto para campos enbebidos
db.getCollection('production-orders').find({"products.production_line._id": "W9RiSLSsyvNx4TBLz", "products.production_line.workstations._id":"6wDEREhT4Xrb4QZTa", "products.production_line.workstations.configurations._id":"jAgBXST4fqAianZzt"})

21 Oct 2021
10. 1 Implementar funcionalidad generar solicitudes de insumos
26 oct 2021 Sigue funcionalidad generar solicitudes de insumos

11.- Implementar pantalla de configuracion de Producto con Estaciones y Configuraciones. 
CRUD Normal OK
Asociar a estacion de trabajo en relacion una ET y Varios SetUp. OK
SI se edita la ET actualizar La Linea de produccion.

Ajustar componente de ET en PRODUCTO para que se elija el setup correspondiente para el producto.OK
Falta Probar Agregar Insumo , borrar y editar......OK
Falta validar que un producto no sea eliminado 
si hay una Orden de Prod Usandolo....OK

12.- Implementar catalogo de costos indirectos que deberan ser asociados al producto. 
Ok Dar de alta Insumos indirectos

12.1 Implementar layout con App bar, Menu de navegacion izq y contenido
OK 19 Enero 2022
12.3 Implementar reporte de solicitudes con exportacion a Excel
    20 Enero 2022
    Ajuste de titulos de paginas por despliegue de menu lateral
    Se declaro la ruta para reporte de sol de suministros Escritorio
    27 Enero 2022
    Implementar servicio de consulta parametrizado
    1 Feb 2022
    Se implemento filtros por fecha
    
    Pendiente validar rango , que la fecha fin sea mayor que la inicial
    OK Pendiente exportar archivo a EXCEL 2 Feb 2022
    https://github.com/dwqs/js2excel
    Pendiente pruebas de fechas y datos consistentes
    3 Febrero 2022
    Despliegue en Servidor PRD en dominio jealdana.com
    10 Feb 2022
    Implementacion de Log a la Bd
    11 Feb 2022 Lado del servidor
    Implementar LOG del lado del FRONT
    15 Feb 2022
    21 Feb


FechaSolicitud:{ $gte:ISODate("2021-06-05T16:33:00.000Z"), $lte:ISODate("2021-06-05T16:33:00.000Z")}

12.3.1  Ajustar mediante directivas seguridad a botones de todas las pantallas

12.4 Implementar notificaciones a usuarios en el componente de AppBar. 
      12.4.1 Catalogo de notificaciones a usuarios
              Propiedades del mensaje
              1.- Contenido del mensaje corto 250 Caracteres
              2.- Importancia, Alta, Media y Baja
              3.- Alcance, Usuarios o Todos
              4.- Vigencia de publicacion; de que fecha a que fecha 
      12.4.2 Traer las notificaciones y pintarlas en la AppBar
      
12.3 Desplegarlo en servidor SealedAir
      12.3.1 Instalar Kafka, MongoDB
      12.3.2 Instalar Cero Metros Web





13.- Implementar ordenes de compra para proveedores
14.- Implementar recepcion de materiales de proveedores
15.- Implementar Transportistas o fleteros
16.- Implementar embarque de productos.
17.- Implementar pedido y seguimiento en linea para clientes 
18.- Implementar Dashboard o tablero de KPIs


   
Publicaciones

const productionLinesPublication=new PublishEndpoint('productionlines.list',function(param1){
        //return ProductionLineRepository.find({},{ _id:1,name:1,description:1,
        return ProductionLineRepository.find({},{sort:{createdAt: -1}
        });
});

productionLinesPublication.use(new PermissionMiddleware(Permissions.PRODUCTIONLINES.LIST.VALUE));

const productionOrderPublication=new PublishEndpoint('production-order.list',function(){
        return ProductionOrders.find({},{
                customer:1,
                createdAt:1, 
                requiredDate:1,
                estimatedDeliveryAt:1, 
                products:1
              });
});
const productionOrderPublicationByPL_WS_CONF=new PublishEndpoint('production-orderByPL_WS_CONF',function(
        productionlineId,workstationId,configurationId){
        return ProductionOrders.find(
                {"products.production_line._id": productionlineId, 
                "products.production_line.workstations._id":workstationId, 
                "products.production_line.workstations.configurations._id":configurationId},
                {
                customer:1,
                createdAt:1, 
                requiredDate:1,
                estimatedDeliveryAt:1, 
                products:1
              });
});
productionOrderPublication.use(new PermissionMiddleware(Permissions.PRODUCTIONORDERS.LIST.VALUE));
productionOrderPublicationByPL_WS_CONF.use(new PermissionMiddleware(Permissions.PRODUCTIONORDERS.LIST.VALUE));

meteor: {
    $subscribe: {
      "productionlines.list": [],
      "production-order.list":[],        
      "production-orderByPL_WS_CONF": function(){
        return [this.productionline._id,this.workstation._id,this.configuration._id]
      },
    },
    productionlines(){
      this.productionLines= ProductionLineRepository.find({}).fetch();
      return this.productionLines;
    },productionorder(){
              const productionordersList= ProductionOrders.find({},{fields:{folio:1,customer:1,createdAt:1,editedAt:1, requiredDate:1,estimatedDeliveryAt:1,notes:1, products:1,status:1}}).fetch();
            return productionordersList;
    },productionorderByPL_WS_CONF(){
              const productionordersByPL_WS_CONFList= ProductionOrders.find({},{fields:{folio:1,customer:1,createdAt:1,editedAt:1, requiredDate:1,estimatedDeliveryAt:1,notes:1, products:1,status:1}}).fetch();
    },
  },


Iconos en color
<template>
  <div align="center">
      <div v-if="loading">
        <h3>Cargando datos...</h3>
      </div>
      <div v-else>
        <v-icon size="120" :color="status?'green':'red'">
          {{ status ? 'mdi-check-circle' : 'mdi-cancel' }}
        </v-icon>
        <h3 class="text-wrap">
          {{ message }}
          <small v-text="description"></small>
        </h3>
        <v-btn :to="{name:'login'}" color="primary">Regresar a inicio</v-btn>
      </div>
  </div>
</template>