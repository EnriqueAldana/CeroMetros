{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros/imports/api/Companies/CompanyCtl.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/api/Companies/CompanyCtl.js","filename":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros/imports/api/Companies/CompanyCtl.js","cloneInputAst":true,"passPerPreset":false,"envName":"development","cwd":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros","root":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.12.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros/imports/api/Companies/CompanyCtl.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/Companies/CompanyCtl.js"}},"code":"let ValidatedMethod;\nmodule.link(\"meteor/mdg:validated-method\", {\n  ValidatedMethod(v) {\n    ValidatedMethod = v;\n  }\n\n}, 0);\nlet ResponseMessage;\nmodule.link(\"../../startup/server/utilities/ResponseMesssage\", {\n  ResponseMessage(v) {\n    ResponseMessage = v;\n  }\n\n}, 1);\nlet AuthGuard;\nmodule.link(\"../../middlewares/AuthGuard\", {\n  default(v) {\n    AuthGuard = v;\n  }\n\n}, 2);\nlet Permissions;\nmodule.link(\"../../startup/server/Permissions\", {\n  default(v) {\n    Permissions = v;\n  }\n\n}, 3);\nlet Company;\nmodule.link(\"./Company\", {\n  Company(v) {\n    Company = v;\n  }\n\n}, 4);\nlet CompanyServ;\nmodule.link(\"./CompanyServ\", {\n  default(v) {\n    CompanyServ = v;\n  }\n\n}, 5);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 6);\nnew ValidatedMethod({\n  name: 'company.save',\n  mixins: [MethodHooks],\n  permissions: [Permissions.COMPANIES.CREATE.VALUE, Permissions.COMPANIES.UPDATE.VALUE],\n  beforeHooks: [AuthGuard.checkPermission],\n\n  validate(company) {\n    try {\n      console.log(\"Obj Empresa\", company);\n      check(company, {\n        _id: Match.OneOf(String, null),\n        name: String,\n        name_full: String,\n        companyBussinessId: String,\n        address: String,\n        phones: String,\n        web: String,\n        email: String,\n        isAvailable: Boolean\n      });\n    } catch (exception) {\n      console.error('company.save', exception);\n      throw new Meteor.Error('403', 'La informacion introducida no es valida');\n    } // Validar que no haya compañias con el mismo nombre y BussinesID\n\n\n    CompanyServ.validateCompanyBussinessId(company.companyBussinessId, company._id);\n    CompanyServ.validateCompanyName(company.name, company._id);\n  },\n\n  run(company) {\n    const responseMessage = new ResponseMessage();\n\n    try {\n      if (company._id !== null) {\n        Company.update(company._id, {\n          $set: {\n            name: company.name,\n            name_full: company.name_full,\n            companyBussinessId: company.companyBussinessId,\n            address: company.address,\n            phones: company.phones,\n            web: company.web,\n            email: company.email,\n            isAvailable: company.isAvailable\n          }\n        });\n        responseMessage.create('Se actualizó la empresa exitosamente');\n      } else {\n        Company.insert({\n          name: company.name,\n          name_full: company.name_full,\n          companyBussinessId: company.companyBussinessId,\n          address: company.address,\n          phones: company.phones,\n          web: company.web,\n          email: company.email,\n          isAvailable: company.isAvailable\n        });\n        responseMessage.create('Se insertó la empresa exitosamente');\n      }\n    } catch (exception) {\n      console.error('company.save', exception);\n      throw new Meteor.Error('500', 'Ha ocurrido un error al guardar la empresa');\n    }\n\n    return responseMessage;\n  }\n\n});\nnew ValidatedMethod({\n  name: 'company.delete',\n  mixins: [MethodHooks],\n  permissions: [Permissions.COMPANIES.DELETE.VALUE],\n  beforeHooks: [AuthGuard.checkPermission],\n  // Aqui se verifica si los permisos de usuario son adecuados para esta accion\n  afterHooks: [],\n\n  validate(_ref) {\n    let {\n      idCompany\n    } = _ref;\n\n    try {\n      check(idCompany, String);\n    } catch (exception) {\n      console.error('company.delete', exception);\n      throw new Meteor.Error('403', 'Ocurrio un error al eliminar la compañia');\n    } // validar que no sea posible eliminar una empresa si hay un usuario utilizandolo.\n\n\n    const userWithCompany = CompanyServ.getUsersBycompany(idCompany);\n\n    if (userWithCompany.length > 0) {\n      throw new Meteor.Error('403', 'No es posible elimiar la empresa', 'Hay al menos un usuario utilizando la empresa');\n    }\n  },\n\n  run(_ref2) {\n    let {\n      idCompany\n    } = _ref2;\n    const responseMessage = new ResponseMessage();\n\n    try {\n      Company.remove(idCompany);\n      responseMessage.create('Compañia eliminada exitosamente');\n    } catch (exception) {\n      console.error('profile.delete', exception);\n      throw new Meteor.Error('500', 'Ocurrio un error al eliminar la empresa');\n    }\n\n    return responseMessage;\n  }\n\n});","map":{"version":3,"sources":["imports/api/Companies/CompanyCtl.js"],"names":["ValidatedMethod","module","link","v","ResponseMessage","AuthGuard","default","Permissions","Company","CompanyServ","check","Match","name","mixins","MethodHooks","permissions","COMPANIES","CREATE","VALUE","UPDATE","beforeHooks","checkPermission","validate","company","console","log","_id","OneOf","String","name_full","companyBussinessId","address","phones","web","email","isAvailable","Boolean","exception","error","Meteor","Error","validateCompanyBussinessId","validateCompanyName","run","responseMessage","update","$set","create","insert","DELETE","afterHooks","idCompany","userWithCompany","getUsersBycompany","length","remove"],"mappings":"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","sourcesContent":["import {ValidatedMethod} from 'meteor/mdg:validated-method';\nimport {ResponseMessage} from \"../../startup/server/utilities/ResponseMesssage\";\nimport AuthGuard from \"../../middlewares/AuthGuard\";\nimport Permissions from \"../../startup/server/Permissions\";\nimport {Company} from \"./Company\";\nimport CompanyServ from \"./CompanyServ\";\nimport {check, Match} from \"meteor/check\";\n\nnew ValidatedMethod({\n    name:'company.save',\n     mixins:[MethodHooks],\n     permissions: [Permissions.COMPANIES.CREATE.VALUE,Permissions.COMPANIES.UPDATE.VALUE],  \n     beforeHooks: [AuthGuard.checkPermission],\n    validate(company){\n        try {\n            console.log(\"Obj Empresa\",company);\n            check(company,{\n                _id: Match.OneOf(String, null),\n                name: String,\n                name_full: String,\n                companyBussinessId: String,\n                address: String,\n                phones: String,\n                web: String,\n                email: String,\n                isAvailable: Boolean\n            });\n\n        }catch ( exception){\n            console.error('company.save', exception);\n            throw new Meteor.Error('403', 'La informacion introducida no es valida');\n        }\n        // Validar que no haya compañias con el mismo nombre y BussinesID\n        CompanyServ.validateCompanyBussinessId(company.companyBussinessId,company._id);\n        CompanyServ.validateCompanyName(company.name,company._id);\n    },\n    run(company){\n        const responseMessage = new ResponseMessage(); \n        try {\n            if(company._id !== null){\n                Company.update(company._id,{\n                    $set: {\n                    name: company.name,\n                    name_full: company.name_full,\n                    companyBussinessId: company.companyBussinessId,\n                    address: company.address,\n                    phones: company.phones,\n                    web: company.web,\n                    email: company.email,\n                    isAvailable: company.isAvailable\n                    }\n                });\n                responseMessage.create('Se actualizó la empresa exitosamente');\n            }else{\n                Company.insert({\n                    name: company.name,\n                    name_full: company.name_full,\n                    companyBussinessId: company.companyBussinessId,\n                    address: company.address,\n                    phones: company.phones,\n                    web: company.web,\n                    email: company.email,\n                    isAvailable: company.isAvailable\n                });\n                responseMessage.create('Se insertó la empresa exitosamente');\n            }\n        }catch ( exception){\n            console.error('company.save', exception);\n            throw new Meteor.Error('500', 'Ha ocurrido un error al guardar la empresa');\n        }\n        return responseMessage;\n    }\n });\n\nnew ValidatedMethod({\n    name: 'company.delete',\n    mixins: [MethodHooks],\n    permissions: [Permissions.COMPANIES.DELETE.VALUE],\n    beforeHooks: [AuthGuard.checkPermission],  // Aqui se verifica si los permisos de usuario son adecuados para esta accion\n    afterHooks: [],\n    validate({ idCompany }){\n        try {\n            check(idCompany, String);\n        }catch (exception) {\n            console.error('company.delete', exception);\n            throw new Meteor.Error('403', 'Ocurrio un error al eliminar la compañia');\n        }\n        // validar que no sea posible eliminar una empresa si hay un usuario utilizandolo.\n        const userWithCompany = CompanyServ.getUsersBycompany(idCompany);\n\n        if (userWithCompany.length > 0){\n            throw new Meteor.Error('403','No es posible elimiar la empresa',\n                'Hay al menos un usuario utilizando la empresa');\n        }\n    },\n    run({ idCompany }){\n        const responseMessage = new ResponseMessage();\n        try {\n                Company.remove(idCompany);\n                responseMessage.create('Compañia eliminada exitosamente');\n        }catch (exception) {\n            console.error('profile.delete', exception);\n            throw new Meteor.Error('500', 'Ocurrio un error al eliminar la empresa');\n        }\n\n        return responseMessage;\n    }\n});\n"]},"sourceType":"module","hash":"99e918558984c219678ebda20d6fb0da1a5ee4e5"}
