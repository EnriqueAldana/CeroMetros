{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros/imports/api/Users/UsersServ.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/api/Users/UsersServ.js","filename":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros/imports/api/Users/UsersServ.js","cloneInputAst":true,"passPerPreset":false,"envName":"development","cwd":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros","root":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.12.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros/imports/api/Users/UsersServ.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/Users/UsersServ.js"}},"code":"let ProfilesServ;\nmodule.link(\"../Profiles/ProfilesServ\", {\n  default(v) {\n    ProfilesServ = v;\n  }\n\n}, 0);\nlet FileOperations;\nmodule.link(\"../../startup/server/utilities/FileOperations\", {\n  default(v) {\n    FileOperations = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nconst PATH_USERS_FILENAME = 'users/';\nmodule.exportDefault({\n  validateEmail(newEmail, idUser) {\n    const existsEmail = Accounts.findUserByEmail(newEmail);\n\n    if (idUser) {\n      // actualizacion de usuario\n      const oldUser = Meteor.users.findOne(idUser);\n\n      if (oldUser.emails[0].address !== newEmail && existsEmail) {\n        throw new Meteor.Error('403', 'El nuevo correo electronico ya esta siendo usado');\n      }\n    } else if (existsEmail) {\n      // es usuario nuevo pero el correo  ya existe.\n      throw new Meteor.Error('403', 'El nuevo correo ya esta siendo utilizado');\n    }\n  },\n\n  validateUserName(newUserName, idUser) {\n    const existsUserName = Accounts.findUserByUsername(newUserName);\n\n    if (idUser) {\n      // actualizacion de usuario//\n      const oldUser = Meteor.users.findOne(idUser);\n\n      if (oldUser.username !== newUserName && existsUserName) {\n        throw new Meteor.Error('403', 'El nombre de usuario  ya esta siendo utilizado');\n      }\n    } else if (existsUserName) {\n      // El nombre de NUEVO usuario ya existe\n      throw new Meteor.Error('403', 'El nombre de usuario  ya esta siendo utilizado');\n    }\n  },\n\n  createUser(user, photoFileUser) {\n    return Promise.asyncApply(() => {\n      const idUser = Accounts.createUser({\n        username: user.username,\n        email: user.emails[0].address,\n        profile: user.profile //,  AL CREAR USUARIO no se fija el password porque se implementara un envio de una URL para que el usuario lo fije\n        //password: user.password\n\n      });\n\n      if (idUser) {\n        ProfilesServ.setUsersRoles(idUser, user.profile.profile);\n        Accounts.sendEnrollmentEmail(idUser, user.emails[0].address);\n      }\n\n      let avatarSrc = null;\n\n      if (photoFileUser) {\n        const response = Promise.await(FileOperations.saveFileFromBase64ToGoogleStorage(photoFileUser, 'avatar', PATH_USERS_FILENAME + idUser));\n\n        if (!response.data.success) {\n          throw new Meteor.Error('403', 'Error al subir la foto');\n        } else {\n          avatarSrc = response.data.fileUrl;\n        }\n      }\n\n      Meteor.users.update(idUser, {\n        $set: {\n          'profile.path': avatarSrc\n        }\n      });\n    });\n  },\n\n  updateuser(user, photoFileUser) {\n    return Promise.asyncApply(() => {\n      const currentUser = Meteor.users.findOne(user._id);\n\n      if (currentUser !== undefined) {\n        if (currentUser.emails[0].address !== user.emails[0].address) {\n          Accounts.removeEmail(currentUser._id, currentUser.emails[0].address);\n          Accounts.addEmail(currentUser._id, user.emails[0].address);\n          Accounts.sendVerificationEmail(user._id, user.emails[0].address);\n        }\n\n        if (currentUser.username !== user.username) {\n          Accounts.setUsername(currentUser._id, user.username);\n        }\n\n        Meteor.users.update(user._id, {\n          $set: {\n            profile: {\n              profile: user.profile.profile,\n              name: user.profile.name,\n              path: currentUser.profile.path\n            }\n          }\n        });\n        ProfilesServ.setUsersRoles(user._id, user.profile.profile);\n\n        if (photoFileUser) {\n          if (currentUser.profile.path) {\n            Promise.await(FileOperations.deleteFileFromGoogleStoreIfExists(currentUser.profile.path.substring(currentUser.profile.path.lastIndexOf(PATH_USERS_FILENAME))));\n          }\n\n          const response = Promise.await(FileOperations.saveFileFromBase64ToGoogleStorage(photoFileUser, 'avatar', PATH_USERS_FILENAME + user._id));\n\n          if (!response.data.success) {\n            throw new Meteor.Error('403', 'Error al subir la foto');\n          } else {\n            Meteor.users.update(user._id, {\n              $set: {\n                'profile.path': response.data.fileUrl\n              }\n            });\n          }\n        }\n      } else {\n        throw new Meteor.Error('403', 'El usuario por actualizar no está en la BD');\n      }\n    });\n  },\n\n  deleteUser(idUser) {\n    return Promise.asyncApply(() => {\n      Meteor.users.remove(idUser);\n      Meteor.roleAssignment.remove({\n        'user._id': idUser\n      });\n      Promise.await(FileOperations.deleteFilesOfFolderFromGoogleStorage(PATH_USERS_FILENAME + idUser));\n    });\n  }\n\n});","map":{"version":3,"sources":["imports/api/Users/UsersServ.js"],"names":["ProfilesServ","module","link","default","v","FileOperations","Meteor","PATH_USERS_FILENAME","exportDefault","validateEmail","newEmail","idUser","existsEmail","Accounts","findUserByEmail","oldUser","users","findOne","emails","address","Error","validateUserName","newUserName","existsUserName","findUserByUsername","username","createUser","user","photoFileUser","email","profile","setUsersRoles","sendEnrollmentEmail","avatarSrc","response","saveFileFromBase64ToGoogleStorage","data","success","fileUrl","update","$set","updateuser","currentUser","_id","undefined","removeEmail","addEmail","sendVerificationEmail","setUsername","name","path","deleteFileFromGoogleStoreIfExists","substring","lastIndexOf","deleteUser","remove","roleAssignment","deleteFilesOfFolderFromGoogleStorage"],"mappings":"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","sourcesContent":["import ProfilesServ from \"../Profiles/ProfilesServ\";\nimport FileOperations from \"../../startup/server/utilities/FileOperations\";\nimport {Meteor} from \"meteor/meteor\";\n\nconst PATH_USERS_FILENAME = 'users/';\nexport default {\n\n    validateEmail(newEmail,idUser){\n\n        const existsEmail= Accounts.findUserByEmail(newEmail);\n        if(idUser){  // actualizacion de usuario\n            const oldUser= Meteor.users.findOne(idUser);\n            if(oldUser.emails[0].address!== newEmail && existsEmail){\n                throw new Meteor.Error('403', 'El nuevo correo electronico ya esta siendo usado');\n            }\n        }else if(existsEmail){ // es usuario nuevo pero el correo  ya existe.\n                throw new Meteor.Error('403', 'El nuevo correo ya esta siendo utilizado');\n\n        }\n\n    },\n    validateUserName(newUserName,idUser){\n        const existsUserName= Accounts.findUserByUsername(newUserName);\n        if (idUser){ // actualizacion de usuario//\n            const oldUser= Meteor.users.findOne(idUser);\n            if(oldUser.username!==newUserName && existsUserName){\n                throw new Meteor.Error('403', 'El nombre de usuario  ya esta siendo utilizado');\n            }\n\n        }else if(existsUserName){ // El nombre de NUEVO usuario ya existe\n            throw new Meteor.Error('403', 'El nombre de usuario  ya esta siendo utilizado');\n        }\n    },\n    async createUser(user,photoFileUser){\n        const idUser= Accounts.createUser({\n            username: user.username,\n            email: user.emails[0].address,\n            profile: user.profile\n            //,  AL CREAR USUARIO no se fija el password porque se implementara un envio de una URL para que el usuario lo fije\n            //password: user.password\n        });\n        if(idUser){\n            ProfilesServ.setUsersRoles(idUser,user.profile.profile);\n            Accounts.sendEnrollmentEmail(idUser,user.emails[0].address);\n        }\n        let avatarSrc= null;\n\n        if(photoFileUser){\n            const response= await FileOperations.saveFileFromBase64ToGoogleStorage(photoFileUser,'avatar',\n                PATH_USERS_FILENAME+idUser);\n            if(!response.data.success){\n                throw new Meteor.Error('403','Error al subir la foto');\n            }else{\n                avatarSrc= response.data.fileUrl;\n            }\n        }\n        Meteor.users.update(idUser,{\n            $set: {\n                'profile.path': avatarSrc\n            }\n        });\n\n\n    },\n    async updateuser(user,photoFileUser){\n        const currentUser=Meteor.users.findOne(user._id);\n\n        if(currentUser!==undefined){\n            if(currentUser.emails[0].address!==user.emails[0].address ){\n                Accounts.removeEmail(currentUser._id, currentUser.emails[0].address);\n                Accounts.addEmail(currentUser._id,user.emails[0].address);\n                Accounts.sendVerificationEmail(user._id,user.emails[0].address);\n            }\n            if(currentUser.username!==user.username ){\n                Accounts.setUsername(currentUser._id,user.username);\n            }\n            Meteor.users.update(user._id,{\n                $set:{\n                    profile:{\n                        profile: user.profile.profile,\n                        name: user.profile.name,\n                        path: currentUser.profile.path\n                    }\n                }\n            });\n            ProfilesServ.setUsersRoles(user._id,user.profile.profile);\n            if(photoFileUser){\n                if(currentUser.profile.path){\n                    await FileOperations.deleteFileFromGoogleStoreIfExists(currentUser.profile.path\n                        .substring(currentUser.profile.path.lastIndexOf(PATH_USERS_FILENAME)));\n                }\n                const response= await FileOperations.saveFileFromBase64ToGoogleStorage(photoFileUser,'avatar',\n                    PATH_USERS_FILENAME+user._id);\n                if(!response.data.success){\n                    throw new Meteor.Error('403','Error al subir la foto');\n                }else{\n                    Meteor.users.update(user._id,{\n                        $set: {\n                            'profile.path': response.data.fileUrl\n                        }\n                    });\n\n                }\n            }\n        }else{\n            throw new Meteor.Error('403', 'El usuario por actualizar no está en la BD');\n        }\n\n    },\n   async  deleteUser(idUser){\n        Meteor.users.remove(idUser);\n        Meteor.roleAssignment.remove({'user._id':idUser});\n        await FileOperations.deleteFilesOfFolderFromGoogleStorage(PATH_USERS_FILENAME+idUser);\n    }\n}"]},"sourceType":"module","hash":"0f4c68ffd93ce3f423fded6a39b822758f8beeab"}
