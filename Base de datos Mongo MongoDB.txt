Base de datos Mongo MongoDB

Conexion Local
mongodb://localhost:27017/admin
Conexion PRODUCCION
mongodb://root:CeroM3tros@jealdana.com:27017/zmeters?authSource=admin

Fijar usuario a MongoDB
db.createUser({ user:"admin", pwd: "CeroM3tros", 
roles:["clusterAdmin","readAnyDatabase","readWriteAnyDatabase",
"userAdminAnyDatabase","dbAdminAnyDatabase"] });


Entrar a MongoDb como administradores
mongo localhost/admin -u admin -p

Script para agregar atributos a usuarios.

db.getCollection('users').update({status:{$exists:false}}, { $set:{status:{online:false}}},{multi:true})

Actualizacion de una columna mas  en Messages
db.getCollection('messages').update({read: {$exists: false}},{$set:{read: false}},{multi: true})

REESTABLECER BASE DE datos
mongorestore -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase admin --db zmeters zmeters
mongorestore -u $MONGO_INITDB_ROOT_USERNAME -p $MONGOINITDB_ROOT_PASSWORD --authenticationDatabase admin --db zmeters zmeters

CONTRASEÑAS

Usuario root
Contraseña : SAbJOATs5Mm  // Esta es la contrasela que se usa 
            CeroM3tros  // Esta es la contraseña que se fijo cuando la imagen fue creada por primera vez.
                        // para reiniciar la contraseña se debe borrar el directorio data/db solo que se perderan todos los datos
            


DETALLES
asi mismo, hay otras cosilla que cambian del mongo nativo al mongo de meteor, 
por ejemplo, la parte de sort y limit. En Mongo nativo se maneja como: .find({}).sort({campo:1}).limit(4) 
y en Mongo de Meteor se maneja con el segundo parametro: .find({},{sort:[campo:1],limit:4})



hacer un backup
mongodump  --port 27017 --host localhost --username admin --password admin --authenticationDatabase=zmeters admin --db zmeters --out database/zmeters8Feb2022
mongodump --host="localhost" --port=27017

Remoto
mongodump --uri="mongodb://<host URL/IP>:<Port>" [additional options]

Problemas
// Si error Mongo code 96 hay que aumentar memoria para ordenamiento al servidor de 32MB a mas
            // Ejecutar en la ventana de comando de MongoDb
            // mongo -u "root" -p CeroM3tros --authenticationDatabase "admin"
            // db.adminCommand ({setParameter: 1, internalQueryExecMaxBlockingSortBytes: 335544320}) // No recomendado
            // Se debe obtener algo asi
            //db.adminCommand ({setParameter: 1, internalQueryExecMaxBlockingSortBytes: 335544320})
            // { "was" : 33554432, "ok" : 1 }

Manuales para consulta , Insercion y Actualizacion
https://guiadev.com/tutorial-de-mongodb-parte-02-sinaxtis-de-consultas/
Datos no repetidos
https://nelsoncode.medium.com/como-agregar-un-nuevo-campo-a-una-colección-en-mongodb-8bd756db5e29

Actualizar todos los registros con una nueva columna
https://www.iteramos.com/pregunta/25173/anadir-un-nuevo-campo-a-una-coleccion-en-mongodb

Administrar MongoDB
https://geekflare.com/es/mongodb-queries-examples/


Comparadores de consultas
https://docs.mongodb.com/manual/reference/operator/query-comparison/
For comparison of different BSON type values, see the specified BSON comparison order.

Name
Description
$eq
Matches values that are equal to a specified value.
$gt
Matches values that are greater than a specified value.
$gte
Matches values that are greater than or equal to a specified value.
$in
Matches any of the values specified in an array.
$lt
Matches values that are less than a specified value.
$lte
Matches values that are less than or equal to a specified value.
$ne
Matches all values that are not equal to a specified value.
$nin
Matches none of the values specified in an array.


Consultas ordenadas
db.getCollection('apm').find({}).sort( { dataCreated: -1 } )