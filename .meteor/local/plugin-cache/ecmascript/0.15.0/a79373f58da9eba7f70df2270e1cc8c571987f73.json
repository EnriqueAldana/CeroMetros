{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros/imports/api/Companies/CompanyServ.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/api/Companies/CompanyServ.js","filename":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros/imports/api/Companies/CompanyServ.js","cloneInputAst":true,"passPerPreset":false,"envName":"development","cwd":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros","root":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.12.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/enrique/DiscoDeEnrique/2021/Proyectos/CeroMetros/imports/api/Companies/CompanyServ.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/Companies/CompanyServ.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Company;\nmodule.link(\"./Company\", {\n  Company(v) {\n    Company = v;\n  }\n\n}, 1);\nmodule.exportDefault({\n  validateCompanyBussinessId(newCompanyBussinesId, idCompany) {\n    const existsCompany = Company.findOne({\n      companyBussinessId: newCompanyBussinesId\n    });\n\n    if (idCompany !== null) {\n      // actualizacion de Compa単ia\n      const oldCompany = Company.findOne(idCompany);\n\n      if (oldCompany.companyBussinessId !== newCompanyBussinesId && existsCompany) {\n        throw new Meteor.Error('403', 'El nuevo RFC de empresa ya esta siendo usado');\n      }\n    } else if (existsCompany) {\n      // es compa単ia nuevo pero el CompanyBussinesId  ya existe.\n      throw new Meteor.Error('403', 'El nuevo RFC de empresa  ya esta siendo utilizado');\n    }\n  },\n\n  validateCompanyName(newCompanyName, idCompany) {\n    const existsCompany = Company.findOne({\n      name: newCompanyName\n    });\n\n    if (idCompany !== null) {\n      // actualizacion de Compa単ia\n      const oldCompany = Company.findOne(idCompany);\n\n      if (oldCompany.name !== newCompanyName && existsCompany) {\n        throw new Meteor.Error('403', 'El nuevo nombre de empresa ya esta siendo usado');\n      }\n    } else if (existsCompany) {\n      // es compa単ia nuevo pero el CompanyBussinesId  ya existe.\n      throw new Meteor.Error('403', 'El nuevo nombre de empresa  ya esta siendo utilizado');\n    }\n  },\n\n  getUsersBycompany(idCompany) {\n    const company = Company.findOne(idCompany);\n    return Meteor.users.find({\n      'companyName': company.name\n    }).fetch();\n  }\n\n});","map":{"version":3,"sources":["imports/api/Companies/CompanyServ.js"],"names":["Meteor","module","link","v","Company","exportDefault","validateCompanyBussinessId","newCompanyBussinesId","idCompany","existsCompany","findOne","companyBussinessId","oldCompany","Error","validateCompanyName","newCompanyName","name","getUsersBycompany","company","users","find","fetch"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACF,EAAAA,MAAM,CAACG,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,OAAJ;AAAYH,MAAM,CAACC,IAAP,CAAY,WAAZ,EAAwB;AAACE,EAAAA,OAAO,CAACD,CAAD,EAAG;AAACC,IAAAA,OAAO,GAACD,CAAR;AAAU;;AAAtB,CAAxB,EAAgD,CAAhD;AAA5EF,MAAM,CAACI,aAAP,CAIe;AAEXC,EAAAA,0BAA0B,CAACC,oBAAD,EAAsBC,SAAtB,EAAgC;AAEtD,UAAMC,aAAa,GAAEL,OAAO,CAACM,OAAR,CAAgB;AAACC,MAAAA,kBAAkB,EAACJ;AAApB,KAAhB,CAArB;;AACA,QAAGC,SAAS,KAAK,IAAjB,EAAsB;AAAG;AACrB,YAAMI,UAAU,GAAER,OAAO,CAACM,OAAR,CAAgBF,SAAhB,CAAlB;;AACA,UAAGI,UAAU,CAACD,kBAAX,KAAkCJ,oBAAlC,IAA0DE,aAA7D,EAA2E;AACvE,cAAM,IAAIT,MAAM,CAACa,KAAX,CAAiB,KAAjB,EAAwB,8CAAxB,CAAN;AACH;AACJ,KALD,MAKM,IAAGJ,aAAH,EAAiB;AAAE;AACjB,YAAM,IAAIT,MAAM,CAACa,KAAX,CAAiB,KAAjB,EAAwB,mDAAxB,CAAN;AAEP;AAEJ,GAfU;;AAgBXC,EAAAA,mBAAmB,CAACC,cAAD,EAAgBP,SAAhB,EAA0B;AACzC,UAAMC,aAAa,GAAEL,OAAO,CAACM,OAAR,CAAgB;AAACM,MAAAA,IAAI,EAACD;AAAN,KAAhB,CAArB;;AACA,QAAGP,SAAS,KAAK,IAAjB,EAAsB;AAAG;AACrB,YAAMI,UAAU,GAAER,OAAO,CAACM,OAAR,CAAgBF,SAAhB,CAAlB;;AACA,UAAGI,UAAU,CAACI,IAAX,KAAoBD,cAApB,IAAsCN,aAAzC,EAAuD;AACnD,cAAM,IAAIT,MAAM,CAACa,KAAX,CAAiB,KAAjB,EAAwB,iDAAxB,CAAN;AACH;AACJ,KALD,MAKM,IAAGJ,aAAH,EAAiB;AAAE;AACjB,YAAM,IAAIT,MAAM,CAACa,KAAX,CAAiB,KAAjB,EAAwB,sDAAxB,CAAN;AAEP;AACJ,GA3BU;;AA4BXI,EAAAA,iBAAiB,CAACT,SAAD,EAAW;AACxB,UAAMU,OAAO,GAAGd,OAAO,CAACM,OAAR,CAAgBF,SAAhB,CAAhB;AACA,WAAOR,MAAM,CAACmB,KAAP,CAAaC,IAAb,CAAkB;AAAC,qBAAcF,OAAO,CAACF;AAAvB,KAAlB,EAAgDK,KAAhD,EAAP;AACH;;AA/BU,CAJf","sourcesContent":["\nimport {Meteor} from \"meteor/meteor\";\nimport {Company} from \"./Company\";\n\nexport default {\n\n    validateCompanyBussinessId(newCompanyBussinesId,idCompany){\n\n        const existsCompany= Company.findOne({companyBussinessId:newCompanyBussinesId});\n        if(idCompany !== null){  // actualizacion de Compa単ia\n            const oldCompany= Company.findOne(idCompany);\n            if(oldCompany.companyBussinessId !== newCompanyBussinesId && existsCompany){\n                throw new Meteor.Error('403', 'El nuevo RFC de empresa ya esta siendo usado');\n            }\n        }else if(existsCompany){ // es compa単ia nuevo pero el CompanyBussinesId  ya existe.\n                throw new Meteor.Error('403', 'El nuevo RFC de empresa  ya esta siendo utilizado');\n\n        }\n\n    },\n    validateCompanyName(newCompanyName,idCompany){\n        const existsCompany= Company.findOne({name:newCompanyName});\n        if(idCompany !== null){  // actualizacion de Compa単ia\n            const oldCompany= Company.findOne(idCompany);\n            if(oldCompany.name !== newCompanyName && existsCompany){\n                throw new Meteor.Error('403', 'El nuevo nombre de empresa ya esta siendo usado');\n            }\n        }else if(existsCompany){ // es compa単ia nuevo pero el CompanyBussinesId  ya existe.\n                throw new Meteor.Error('403', 'El nuevo nombre de empresa  ya esta siendo utilizado');\n\n        }\n    },\n    getUsersBycompany(idCompany){\n        const company = Company.findOne(idCompany);\n        return Meteor.users.find({'companyName':company.name}).fetch();\n    }\n}"]},"sourceType":"module","hash":"a79373f58da9eba7f70df2270e1cc8c571987f73"}
