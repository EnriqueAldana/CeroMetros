{"code":"module.exportDefault = function(value) { __vue_script__ = value; }; (function(){var Profile;\nmodule.link(\"../../../api/Profiles/Profile\", {\n  Profile: function (v) {\n    Profile = v;\n  }\n}, 0);\nvar uploadImage;\nmodule.link(\"../../mixins/users/uploadImage\", {\n  \"default\": function (v) {\n    uploadImage = v;\n  }\n}, 1);\nmodule.exportDefault({\n  name: \"SaveUser\",\n  mixins: [uploadImage],\n  data: function () {\n    return {\n      user: {\n        _id: null,\n        username: null,\n        emails: [{\n          address: null,\n          verified: false\n        }],\n        profile: {\n          profile: null,\n          name: null,\n          path: null\n        }\n      },\n      dataView: {\n        title: '',\n        targetButton: ''\n      }\n    };\n  },\n  created: function () {\n    // Este es un metodo gancho, y se ejecuta cuando el HTML es creado\n    if (this.$router.currentRoute.name.includes(\"create\")) {\n      this.dataView.title = \"Crear usuario\";\n      this.dataView.targetButton = \"Crear\";\n    } else if (this.$router.currentRoute.name.includes(\"edit\")) {\n      this.dataView.title = \"Editar usuario\";\n      this.dataView.targetButton = \"Actualizar\";\n      var tempUser = this.$store.state.temporal.element;\n      this.user = {\n        _id: tempUser._id,\n        username: tempUser.username,\n        emails: tempUser.emails,\n        profile: tempUser.profile\n      };\n    }\n  },\n  methods: {\n    saveUser: function () {\n      var _this = this;\n\n      console.log(\"Usuario: \", this.user);\n      this.$loader.activate('Guardando usuario...');\n      Meteor.call('user.save', {\n        user: this.user,\n        photoFileUser: this.photoFileUser\n      }, function (error, response) {\n        _this.$loader.deactivate();\n\n        if (error) {\n          _this.$alert.showAlertSimple('error', error.reason);\n        } else {\n          _this.$alert.showAlertSimple('success', response.message);\n\n          _this.$router.push({\n            name: 'home.users'\n          });\n        }\n      });\n    }\n  },\n  meteor: {\n    $subscribe: {\n      'profile.listAll': []\n    },\n    profiles: function () {\n      return Profile.find().fetch();\n    }\n  }\n});\n})();","map":{"version":3,"sources":["imports/ui/views/Users/SaveUser.vue"],"names":["Profile","module","link","v","uploadImage","exportDefault","name","mixins","data","user","_id","username","emails","address","verified","profile","path","dataView","title","targetButton","created","$router","currentRoute","includes","tempUser","$store","state","temporal","element","methods","saveUser","console","log","$loader","activate","Meteor","call","photoFileUser","error","response","deactivate","$alert","showAlertSimple","reason","message","push","meteor","$subscribe","profiles","find","fetch"],"mappings":";;;;;;;;;;;;qBAwDA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,MAAA,EAAA,CAAA,WAAA,CAFA;AAGA,EAAA,IAHA,cAGA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,GAAA,EAAA,IADA;AAEA,QAAA,QAAA,EAAA,IAFA;AAGA,QAAA,MAAA,EAAA,CAAA;AAAA,UAAA,OAAA,EAAA,IAAA;AAAA,UAAA,QAAA,EAAA;AAAA,SAAA,CAHA;AAIA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA,IADA;AAEA,UAAA,IAAA,EAAA,IAFA;AAGA,UAAA,IAAA,EAAA;AAHA;AAJA,OADA;AAWA,MAAA,QAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,YAAA,EAAA;AAFA;AAXA,KAAA;AAgBA,GApBA;AAqBA,EAAA,OArBA,cAqBA;AAAA;AACA,QAAA,KAAA,OAAA,CAAA,YAAA,CAAA,IAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA;AACA,WAAA,QAAA,CAAA,KAAA,GAAA,eAAA;AACA,WAAA,QAAA,CAAA,YAAA,GAAA,OAAA;AACA,KAHA,MAGA,IAAA,KAAA,OAAA,CAAA,YAAA,CAAA,IAAA,CAAA,QAAA,CAAA,MAAA,CAAA,EAAA;AACA,WAAA,QAAA,CAAA,KAAA,GAAA,gBAAA;AACA,WAAA,QAAA,CAAA,YAAA,GAAA,YAAA;AACA,UAAA,QAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,OAAA;AACA,WAAA,IAAA,GAAA;AACA,QAAA,GAAA,EAAA,QAAA,CAAA,GADA;AAEA,QAAA,QAAA,EAAA,QAAA,CAAA,QAFA;AAGA,QAAA,MAAA,EAAA,QAAA,CAAA,MAHA;AAIA,QAAA,OAAA,EAAA,QAAA,CAAA;AAJA,OAAA;AAMA;AACA,GApCA;AAqCA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,cACA;AAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,KAAA,IAAA;AACA,WAAA,OAAA,CAAA,QAAA,CAAA,sBAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,QAAA,IAAA,EAAA,KAAA,IAAA;AAAA,QAAA,aAAA,EAAA,KAAA;AAAA,OAAA,EAAA,UAAA,KAAA,EAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,UAAA;;AACA,YAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,eAAA,CAAA,OAAA,EAAA,KAAA,CAAA,MAAA;AACA,SAFA,MAEA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,eAAA,CAAA,SAAA,EAAA,QAAA,CAAA,OAAA;;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA;AACA;AACA,OARA;AAUA;AAdA,GArCA;AAqDA,EAAA,MAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,yBAAA;AADA,KADA;AAIA,IAAA,QAJA,cAIA;AACA,aAAA,OAAA,CAAA,IAAA,GAAA,KAAA,EAAA;AACA;AANA;AArDA","sourcesContent":["<template>\n  <v-container>\n    <v-row>\n      <v-col>\n        <div class=\"headline\">{{dataView.title}}</div>\n      </v-col>\n      <v-col cols=\"2\">\n        <v-btn block type=\"submit\" form=\"saveUser\" color=\"primary\" v-text=\"dataView.targetButton\">\n        </v-btn>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col>\n        <v-card>\n          <v-card-text>\n            <v-form @submit.prevent=\"saveUser\" id=\"saveUser\" autocomplete=\"off\">\n              <v-row>\n                <v-col xs=\"12\" sm=\"12\" md=\"4\">\n                  <div class=\"d-flex flex-column align-center\">\n                    <img :src=\"user.profile.path || '/img/user.png'\" :alt=\"user.profile.name\" width=\"100px\">\n                    <v-file-input v-show=\"false\" ref=\"imageFile\" v-model=\"file\" accept=\"image/png, image/jpeg , image/bpm\">\n                    </v-file-input>\n                    <v-btn color=\"primary\" class=\"mb-5 mt-5\" width=\"100%\" rounded depressed @click=\"onClickUploadButtom\">\n                      <span v-if=\"user.profile.path\">Cambiar</span>\n                      <span v-else>Cargar</span>\n                    </v-btn>\n                  </div>\n                </v-col>\n                <v-col xs=\"12\" sm=\"12\" md=\"8\">\n                  <v-text-field v-model=\"user.profile.name\" id=\"inputName\" name=\"name\" label=\"Nombre\">\n                  </v-text-field>\n                  <v-select v-model=\"user.profile.profile\" id=\"selectProfile\" name=\"profile\"\n                            :items=\"profiles\"\n                            item-text=\"description\" item-value=\"name\"\n                            label=\"Perfil\">\n                  </v-select>\n                  <v-text-field v-model=\"user.username\" id=\"inputUsername\" name=\"username\"\n                                label=\"Usuario\">\n                  </v-text-field>\n                  <v-text-field v-model=\"user.emails[0].address\" id=\"inputEmail\" type=\"email\"\n                                name=\"email\" label=\"Correo\">\n                  </v-text-field>\n                </v-col>\n              </v-row>\n            </v-form>\n          </v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport {Profile} from \"../../../api/Profiles/Profile\";\nimport uploadImage from \"../../mixins/users/uploadImage\";\n\nexport default {\n  name: \"SaveUser\",\n  mixins:[uploadImage],\n  data() {\n    return {\n      user: {\n        _id: null,\n        username: null,\n        emails: [{address:null, verified:false}],\n        profile: {\n          profile: null,\n          name:null,\n          path: null\n        },\n      },\n      dataView: {\n        title: '',\n        targetButton: ''\n      }\n    }\n  },\n  created(){  // Este es un metodo gancho, y se ejecuta cuando el HTML es creado\n    if(this.$router.currentRoute.name.includes(\"create\")){\n      this.dataView.title=\"Crear usuario\";\n      this.dataView.targetButton=\"Crear\";\n    }else if(this.$router.currentRoute.name.includes(\"edit\")){\n      this.dataView.title=\"Editar usuario\";\n      this.dataView.targetButton=\"Actualizar\";\n      const tempUser=this.$store.state.temporal.element;\n      this.user={\n        _id:tempUser._id,\n        username: tempUser.username,\n        emails:tempUser.emails,\n        profile: tempUser.profile\n      };\n    }\n  },\n  methods: {\n    saveUser() {\n      console.log(\"Usuario: \", this.user);\n      this.$loader.activate('Guardando usuario...');\n      Meteor.call('user.save',{user: this.user,photoFileUser: this.photoFileUser},(error,response) => {\n        this.$loader.deactivate();\n        if(error){\n              this.$alert.showAlertSimple('error',error.reason);\n        }else{\n          this.$alert.showAlertSimple('success',response.message);\n          this.$router.push({name: 'home.users'});\n        }\n      });\n\n    }\n  },\n  meteor:{\n    $subscribe: {\n        'profile.listAll': []\n    },\n    profiles(){\n      return Profile.find().fetch();\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"file":"imports/ui/views/Users/SaveUser.vue"},"styles":[{"css":"\n\n","map":{"version":3,"sources":[],"names":[],"mappings":"","file":"SaveUser.vue"}}],"template":"\n<v-container>\n  <v-row>\n    <v-col>\n      <div class=\"headline\">{{dataView.title}}</div>\n    </v-col>\n    <v-col cols=\"2\">\n      <v-btn block type=\"submit\" form=\"saveUser\" color=\"primary\" v-text=\"dataView.targetButton\">\n      </v-btn>\n    </v-col>\n  </v-row>\n  <v-row>\n    <v-col>\n      <v-card>\n        <v-card-text>\n          <v-form @submit.prevent=\"saveUser\" id=\"saveUser\" autocomplete=\"off\">\n            <v-row>\n              <v-col xs=\"12\" sm=\"12\" md=\"4\">\n                <div class=\"d-flex flex-column align-center\">\n                  <img :src=\"user.profile.path || '/img/user.png'\" :alt=\"user.profile.name\" width=\"100px\">\n                  <v-file-input v-show=\"false\" ref=\"imageFile\" v-model=\"file\" accept=\"image/png, image/jpeg , image/bpm\">\n                  </v-file-input>\n                  <v-btn color=\"primary\" class=\"mb-5 mt-5\" width=\"100%\" rounded depressed @click=\"onClickUploadButtom\">\n                    <span v-if=\"user.profile.path\">Cambiar</span>\n                    <span v-else>Cargar</span>\n                  </v-btn>\n                </div>\n              </v-col>\n              <v-col xs=\"12\" sm=\"12\" md=\"8\">\n                <v-text-field v-model=\"user.profile.name\" id=\"inputName\" name=\"name\" label=\"Nombre\">\n                </v-text-field>\n                <v-select v-model=\"user.profile.profile\" id=\"selectProfile\" name=\"profile\"\n                          :items=\"profiles\"\n                          item-text=\"description\" item-value=\"name\"\n                          label=\"Perfil\">\n                </v-select>\n                <v-text-field v-model=\"user.username\" id=\"inputUsername\" name=\"username\"\n                              label=\"Usuario\">\n                </v-text-field>\n                <v-text-field v-model=\"user.emails[0].address\" id=\"inputEmail\" type=\"email\"\n                              name=\"email\" label=\"Correo\">\n                </v-text-field>\n              </v-col>\n            </v-row>\n          </v-form>\n        </v-card-text>\n      </v-card>\n    </v-col>\n  </v-row>\n</v-container>\n","hash":"data-v-9229bfee"}